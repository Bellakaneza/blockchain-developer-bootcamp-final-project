{"ast":null,"code":"import _regeneratorRuntime from\"/home/routinecheck/github/create-election/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/routinecheck/github/create-election/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/routinecheck/github/create-election/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Col,Menu,Row}from\"antd\";import\"antd/dist/antd.css\";import{useBalance,useContractLoader,useContractReader,useGasPrice,useOnBlock,useUserProviderAndSigner}from\"eth-hooks\";import{useExchangeEthPrice}from\"eth-hooks/dapps/dex\";import React,{useCallback,useEffect,useState}from\"react\";import{Link,Route,Switch,useLocation}from\"react-router-dom\";import\"./App.css\";import{Account,Contract,Faucet,GasGauge,Header,Ramp,ThemeSwitch,NetworkDisplay,FaucetHint,NetworkSwitch}from\"./components\";import{NETWORKS,ALCHEMY_KEY}from\"./constants\";import externalContracts from\"./contracts/external_contracts\";// contracts\nimport deployedContracts from\"./contracts/hardhat_contracts.json\";import{Transactor,Web3ModalSetup}from\"./helpers\";import{Home,ExampleUI,Hints,Subgraph}from\"./views\";import{useStaticJsonRPC}from\"./hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"ethers\"),ethers=_require.ethers;/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/ /// üì° What chain are your contracts deployed to?\nvar initialNetwork=NETWORKS['rinkeby'];// <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\nvar DEBUG=true;var NETWORKCHECK=true;var USE_BURNER_WALLET=true;// toggle burner wallet feature\nvar USE_NETWORK_SELECTOR=false;var web3Modal=Web3ModalSetup();// üõ∞ providers\nvar providers=[\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\"https://eth-mainnet.alchemyapi.io/v2/\".concat(ALCHEMY_KEY),\"https://rpc.scaffoldeth.io:48544\"];function App(props){// specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n// reference './constants.js' for other networks\nvar networkOptions=[initialNetwork.name,\"mainnet\",\"rinkeby\"];var _useState=useState(),_useState2=_slicedToArray(_useState,2),injectedProvider=_useState2[0],setInjectedProvider=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var _useState5=useState(networkOptions[0]),_useState6=_slicedToArray(_useState5,2),selectedNetwork=_useState6[0],setSelectedNetwork=_useState6[1];var location=useLocation();var targetNetwork=NETWORKS[selectedNetwork];// üî≠ block explorer URL\nvar blockExplorer=targetNetwork.blockExplorer;// load all your providers\nvar localProvider=useStaticJsonRPC([process.env.REACT_APP_PROVIDER?process.env.REACT_APP_PROVIDER:targetNetwork.rpcUrl]);var mainnetProvider=useStaticJsonRPC(providers);if(DEBUG)console.log(\"Using \".concat(selectedNetwork,\" network\"));// üõ∞ providers\nif(DEBUG)console.log(\"üì° Connecting to Mainnet Ethereum\");var logoutOfWeb3Modal=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return web3Modal.clearCachedProvider();case 2:if(!(injectedProvider&&injectedProvider.provider&&typeof injectedProvider.provider.disconnect==\"function\")){_context.next=5;break;}_context.next=5;return injectedProvider.provider.disconnect();case 5:setTimeout(function(){window.location.reload();},1);case 6:case\"end\":return _context.stop();}}},_callee);}));return function logoutOfWeb3Modal(){return _ref.apply(this,arguments);};}();/* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */var price=useExchangeEthPrice(targetNetwork,mainnetProvider);/* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */var gasPrice=useGasPrice(targetNetwork,\"fast\");// Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\nvar userProviderAndSigner=useUserProviderAndSigner(injectedProvider,localProvider,USE_BURNER_WALLET);var userSigner=userProviderAndSigner.signer;useEffect(function(){function getAddress(){return _getAddress.apply(this,arguments);}function _getAddress(){_getAddress=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var newAddress;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!userSigner){_context2.next=5;break;}_context2.next=3;return userSigner.getAddress();case 3:newAddress=_context2.sent;setAddress(newAddress);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _getAddress.apply(this,arguments);}getAddress();},[userSigner]);// You can warn the user if you would like them to be on a specific network\nvar localChainId=localProvider&&localProvider._network&&localProvider._network.chainId;var selectedChainId=userSigner&&userSigner.provider&&userSigner.provider._network&&userSigner.provider._network.chainId;// For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n// The transactor wraps transactions and provides notificiations\nvar tx=Transactor(userSigner,gasPrice);// üèó scaffold-eth is full of handy hooks like this one to get your balance:\nvar yourLocalBalance=useBalance(localProvider,address);// Just plug in different üõ∞ providers to get your balance on different chains:\nvar yourMainnetBalance=useBalance(mainnetProvider,address);// const contractConfig = useContractConfig();\nvar contractConfig={deployedContracts:deployedContracts||{},externalContracts:externalContracts||{}};// Load in your local üìù contract and read a value from it:\nvar readContracts=useContractLoader(localProvider,contractConfig);// If you want to make üîê write transactions to your contracts, use the userSigner:\nvar writeContracts=useContractLoader(userSigner,contractConfig,localChainId);// EXTERNAL CONTRACT EXAMPLE:\n//\n// If you want to bring in the mainnet DAI contract it would look like:\nvar mainnetContracts=useContractLoader(mainnetProvider,contractConfig);// If you want to call a function on a new block\nuseOnBlock(mainnetProvider,function(){console.log(\"\\u26D3 A new mainnet block is here: \".concat(mainnetProvider._lastBlockNumber));});// Then read your DAI balance like:\nvar myMainnetDAIBalance=useContractReader(mainnetContracts,\"DAI\",\"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);// keep track of a variable from the contract in the local React state:\nvar purpose=useContractReader(readContracts,\"YourContract\",\"purpose\");/*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */ //\n// üß´ DEBUG üë®üèª‚Äçüî¨\n//\nuseEffect(function(){if(DEBUG&&mainnetProvider&&address&&selectedChainId&&yourLocalBalance&&yourMainnetBalance&&readContracts&&writeContracts&&mainnetContracts){console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");console.log(\"üåé mainnetProvider\",mainnetProvider);console.log(\"üè† localChainId\",localChainId);console.log(\"üë©‚Äçüíº selected address:\",address);console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId);console.log(\"üíµ yourLocalBalance\",yourLocalBalance?ethers.utils.formatEther(yourLocalBalance):\"...\");console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?ethers.utils.formatEther(yourMainnetBalance):\"...\");console.log(\"üìù readContracts\",readContracts);console.log(\"üåç DAI contract on mainnet:\",mainnetContracts);console.log(\"üíµ yourMainnetDAIBalance\",myMainnetDAIBalance);console.log(\"üîê writeContracts\",writeContracts);}},[mainnetProvider,address,selectedChainId,yourLocalBalance,yourMainnetBalance,readContracts,writeContracts,mainnetContracts,localChainId,myMainnetDAIBalance]);var loadWeb3Modal=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var provider;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return web3Modal.connect();case 2:provider=_context3.sent;setInjectedProvider(new ethers.providers.Web3Provider(provider));provider.on(\"chainChanged\",function(chainId){console.log(\"chain changed to \".concat(chainId,\"! updating providers\"));setInjectedProvider(new ethers.providers.Web3Provider(provider));});provider.on(\"accountsChanged\",function(){console.log(\"account changed!\");setInjectedProvider(new ethers.providers.Web3Provider(provider));});// Subscribe to session disconnection\nprovider.on(\"disconnect\",function(code,reason){console.log(code,reason);logoutOfWeb3Modal();});// eslint-disable-next-line\ncase 7:case\"end\":return _context3.stop();}}},_callee3);})),[setInjectedProvider]);useEffect(function(){if(web3Modal.cachedProvider){loadWeb3Modal();}},[loadWeb3Modal]);var faucetAvailable=localProvider&&localProvider.connection&&targetNetwork.name.indexOf(\"local\")!==-1;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(NetworkDisplay,{NETWORKCHECK:NETWORKCHECK,localChainId:localChainId,selectedChainId:selectedChainId,targetNetwork:targetNetwork,logoutOfWeb3Modal:logoutOfWeb3Modal,USE_NETWORK_SELECTOR:USE_NETWORK_SELECTOR}),/*#__PURE__*/_jsxs(Menu,{style:{textAlign:\"center\",marginTop:40},selectedKeys:[location.pathname],mode:\"horizontal\",children:[/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"App Home\"})},\"/\"),/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{to:\"/yourcontract\",children:\"Create Election\"})},\"/yourcontract\")]}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{yourLocalBalance:yourLocalBalance,readContracts:readContracts})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/yourcontract\",children:/*#__PURE__*/_jsx(Contract,{name:\"YourContract\",price:price,signer:userSigner,provider:localProvider,address:address,blockExplorer:blockExplorer,contractConfig:contractConfig})})]}),/*#__PURE__*/_jsx(ThemeSwitch,{}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"right\",right:0,top:0,padding:10},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flex:1,alignItems:\"center\"},children:[USE_NETWORK_SELECTOR&&/*#__PURE__*/_jsx(\"div\",{style:{marginRight:20},children:/*#__PURE__*/_jsx(NetworkSwitch,{networkOptions:networkOptions,selectedNetwork:selectedNetwork,setSelectedNetwork:setSelectedNetwork})}),/*#__PURE__*/_jsx(Account,{useBurner:USE_BURNER_WALLET,address:address,localProvider:localProvider,userSigner:userSigner,mainnetProvider:mainnetProvider,price:price,web3Modal:web3Modal,loadWeb3Modal:loadWeb3Modal,logoutOfWeb3Modal:logoutOfWeb3Modal,blockExplorer:blockExplorer})]}),yourLocalBalance.lte(ethers.BigNumber.from(\"0\"))&&/*#__PURE__*/_jsx(FaucetHint,{localProvider:localProvider,targetNetwork:targetNetwork,address:address})]}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"left\",left:0,bottom:20,padding:10},children:[/*#__PURE__*/_jsxs(Row,{align:\"middle\",gutter:[4,4],children:[/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Ramp,{price:price,address:address,networks:NETWORKS})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:0.8},children:/*#__PURE__*/_jsx(GasGauge,{gasPrice:gasPrice})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:1},children:/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");},size:\"large\",shape:\"round\",children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:8},role:\"img\",\"aria-label\":\"support\",children:\"\\uD83D\\uDCAC\"}),\"Support\"]})})]}),/*#__PURE__*/_jsx(Row,{align:\"middle\",gutter:[4,4],children:/*#__PURE__*/_jsx(Col,{span:24,children:/*  if the local provider has a signer, let's show the faucet:  */faucetAvailable?/*#__PURE__*/_jsx(Faucet,{localProvider:localProvider,price:price,ensProvider:mainnetProvider}):\"\"})})]})]});}export default App;","map":{"version":3,"sources":["/home/routinecheck/github/create-election/packages/react-app/src/App.jsx"],"names":["Button","Col","Menu","Row","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","React","useCallback","useEffect","useState","Link","Route","Switch","useLocation","Account","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","NetworkDisplay","FaucetHint","NetworkSwitch","NETWORKS","ALCHEMY_KEY","externalContracts","deployedContracts","Transactor","Web3ModalSetup","Home","ExampleUI","Hints","Subgraph","useStaticJsonRPC","require","ethers","initialNetwork","DEBUG","NETWORKCHECK","USE_BURNER_WALLET","USE_NETWORK_SELECTOR","web3Modal","providers","App","props","networkOptions","name","injectedProvider","setInjectedProvider","address","setAddress","selectedNetwork","setSelectedNetwork","location","targetNetwork","blockExplorer","localProvider","process","env","REACT_APP_PROVIDER","rpcUrl","mainnetProvider","console","log","logoutOfWeb3Modal","clearCachedProvider","provider","disconnect","setTimeout","window","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","_network","chainId","selectedChainId","tx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","purpose","utils","formatEther","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","faucetAvailable","connection","indexOf","textAlign","marginTop","pathname","position","right","top","padding","display","flex","alignItems","marginRight","lte","BigNumber","from","left","bottom","opacity","open"],"mappings":"6dAAA,OAASA,MAAT,CAAiBC,GAAjB,CAAsBC,IAAtB,CAA4BC,GAA5B,KAAuC,MAAvC,CACA,MAAO,oBAAP,CACA,OACEC,UADF,CAEEC,iBAFF,CAGEC,iBAHF,CAIEC,WAJF,CAKEC,UALF,CAMEC,wBANF,KAOO,WAPP,CAQA,OAASC,mBAAT,KAAoC,qBAApC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,WAA9B,KAAiD,kBAAjD,CACA,MAAO,WAAP,CACA,OACEC,OADF,CAEEC,QAFF,CAGEC,MAHF,CAIEC,QAJF,CAKEC,MALF,CAMEC,IANF,CAOEC,WAPF,CAQEC,cARF,CASEC,UATF,CAUEC,aAVF,KAWO,cAXP,CAYA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,aAAtC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,gCAA9B,CACA;AACA,MAAOC,CAAAA,iBAAP,KAA8B,oCAA9B,CACA,OAASC,UAAT,CAAqBC,cAArB,KAA2C,WAA3C,CACA,OAASC,IAAT,CAAeC,SAAf,CAA0BC,KAA1B,CAAiCC,QAAjC,KAAiD,SAAjD,CACA,OAASC,gBAAT,KAAiC,SAAjC,C,wFAEA,aAAmBC,OAAO,CAAC,QAAD,CAA1B,CAAQC,MAAR,UAAQA,MAAR,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,CAEA;AACA,GAAMC,CAAAA,cAAc,CAAGb,QAAQ,CAAC,SAAD,CAA/B,CAA4C;AAE5C;AACA,GAAMc,CAAAA,KAAK,CAAG,IAAd,CACA,GAAMC,CAAAA,YAAY,CAAG,IAArB,CACA,GAAMC,CAAAA,iBAAiB,CAAG,IAA1B,CAAgC;AAChC,GAAMC,CAAAA,oBAAoB,CAAG,KAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAGb,cAAc,EAAhC,CAEA;AACA,GAAMc,CAAAA,SAAS,CAAG,CAChB,yEADgB,gDAEwBlB,WAFxB,EAGhB,kCAHgB,CAAlB,CAMA,QAASmB,CAAAA,GAAT,CAAaC,KAAb,CAAoB,CAClB;AACA;AACA,GAAMC,CAAAA,cAAc,CAAG,CAACT,cAAc,CAACU,IAAhB,CAAsB,SAAtB,CAAiC,SAAjC,CAAvB,CAEA,cAAgDtC,QAAQ,EAAxD,wCAAOuC,gBAAP,eAAyBC,mBAAzB,eACA,eAA8BxC,QAAQ,EAAtC,yCAAOyC,OAAP,eAAgBC,UAAhB,eACA,eAA8C1C,QAAQ,CAACqC,cAAc,CAAC,CAAD,CAAf,CAAtD,yCAAOM,eAAP,eAAwBC,kBAAxB,eACA,GAAMC,CAAAA,QAAQ,CAAGzC,WAAW,EAA5B,CAEA,GAAM0C,CAAAA,aAAa,CAAG/B,QAAQ,CAAC4B,eAAD,CAA9B,CAEA;AACA,GAAMI,CAAAA,aAAa,CAAGD,aAAa,CAACC,aAApC,CAEA;AACA,GAAMC,CAAAA,aAAa,CAAGvB,gBAAgB,CAAC,CACrCwB,OAAO,CAACC,GAAR,CAAYC,kBAAZ,CAAiCF,OAAO,CAACC,GAAR,CAAYC,kBAA7C,CAAkEL,aAAa,CAACM,MAD3C,CAAD,CAAtC,CAGA,GAAMC,CAAAA,eAAe,CAAG5B,gBAAgB,CAACS,SAAD,CAAxC,CAEA,GAAIL,KAAJ,CAAWyB,OAAO,CAACC,GAAR,iBAAqBZ,eAArB,cAEX;AACA,GAAId,KAAJ,CAAWyB,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAEX,GAAMC,CAAAA,iBAAiB,0FAAG,yJAClBvB,CAAAA,SAAS,CAACwB,mBAAV,EADkB,aAEpBlB,gBAAgB,EAAIA,gBAAgB,CAACmB,QAArC,EAAiD,MAAOnB,CAAAA,gBAAgB,CAACmB,QAAjB,CAA0BC,UAAjC,EAA+C,UAF5E,gDAGhBpB,CAAAA,gBAAgB,CAACmB,QAAjB,CAA0BC,UAA1B,EAHgB,QAKxBC,UAAU,CAAC,UAAM,CACfC,MAAM,CAAChB,QAAP,CAAgBiB,MAAhB,GACD,CAFS,CAEP,CAFO,CAAV,CALwB,sDAAH,kBAAjBN,CAAAA,iBAAiB,0CAAvB,CAUA,6DACA,GAAMO,CAAAA,KAAK,CAAGnE,mBAAmB,CAACkD,aAAD,CAAgBO,eAAhB,CAAjC,CAEA,oEACA,GAAMW,CAAAA,QAAQ,CAAGvE,WAAW,CAACqD,aAAD,CAAgB,MAAhB,CAA5B,CACA;AACA,GAAMmB,CAAAA,qBAAqB,CAAGtE,wBAAwB,CAAC4C,gBAAD,CAAmBS,aAAnB,CAAkCjB,iBAAlC,CAAtD,CACA,GAAMmC,CAAAA,UAAU,CAAGD,qBAAqB,CAACE,MAAzC,CAEApE,SAAS,CAAC,UAAM,SACCqE,CAAAA,UADD,wIACd,2JACMF,UADN,iDAE6BA,CAAAA,UAAU,CAACE,UAAX,EAF7B,QAEUC,UAFV,gBAGI3B,UAAU,CAAC2B,UAAD,CAAV,CAHJ,wDADc,6CAOdD,UAAU,GACX,CARQ,CAQN,CAACF,UAAD,CARM,CAAT,CAUA;AACA,GAAMI,CAAAA,YAAY,CAAGtB,aAAa,EAAIA,aAAa,CAACuB,QAA/B,EAA2CvB,aAAa,CAACuB,QAAd,CAAuBC,OAAvF,CACA,GAAMC,CAAAA,eAAe,CACnBP,UAAU,EAAIA,UAAU,CAACR,QAAzB,EAAqCQ,UAAU,CAACR,QAAX,CAAoBa,QAAzD,EAAqEL,UAAU,CAACR,QAAX,CAAoBa,QAApB,CAA6BC,OADpG,CAGA;AAEA;AACA,GAAME,CAAAA,EAAE,CAAGvD,UAAU,CAAC+C,UAAD,CAAaF,QAAb,CAArB,CAEA;AACA,GAAMW,CAAAA,gBAAgB,CAAGrF,UAAU,CAAC0D,aAAD,CAAgBP,OAAhB,CAAnC,CAEA;AACA,GAAMmC,CAAAA,kBAAkB,CAAGtF,UAAU,CAAC+D,eAAD,CAAkBZ,OAAlB,CAArC,CAEA;AAEA,GAAMoC,CAAAA,cAAc,CAAG,CAAE3D,iBAAiB,CAAEA,iBAAiB,EAAI,EAA1C,CAA8CD,iBAAiB,CAAEA,iBAAiB,EAAI,EAAtF,CAAvB,CAEA;AACA,GAAM6D,CAAAA,aAAa,CAAGvF,iBAAiB,CAACyD,aAAD,CAAgB6B,cAAhB,CAAvC,CAEA;AACA,GAAME,CAAAA,cAAc,CAAGxF,iBAAiB,CAAC2E,UAAD,CAAaW,cAAb,CAA6BP,YAA7B,CAAxC,CAEA;AACA;AACA;AACA,GAAMU,CAAAA,gBAAgB,CAAGzF,iBAAiB,CAAC8D,eAAD,CAAkBwB,cAAlB,CAA1C,CAEA;AACAnF,UAAU,CAAC2D,eAAD,CAAkB,UAAM,CAChCC,OAAO,CAACC,GAAR,+CAA8CF,eAAe,CAAC4B,gBAA9D,GACD,CAFS,CAAV,CAIA;AACA,GAAMC,CAAAA,mBAAmB,CAAG1F,iBAAiB,CAACwF,gBAAD,CAAmB,KAAnB,CAA0B,WAA1B,CAAuC,CAClF,4CADkF,CAAvC,CAA7C,CAIA;AACA,GAAMG,CAAAA,OAAO,CAAG3F,iBAAiB,CAACsF,aAAD,CAAgB,cAAhB,CAAgC,SAAhC,CAAjC,CAEA;AACF;AACA;AACA,IAtGoB,CAwGlB;AACA;AACA;AACA/E,SAAS,CAAC,UAAM,CACd,GACE8B,KAAK,EACLwB,eADA,EAEAZ,OAFA,EAGAgC,eAHA,EAIAE,gBAJA,EAKAC,kBALA,EAMAE,aANA,EAOAC,cAPA,EAQAC,gBATF,CAUE,CACA1B,OAAO,CAACC,GAAR,CAAY,6FAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCF,eAAlC,EACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+Be,YAA/B,EACAhB,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCd,OAAvC,EACAa,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCkB,eAAxC,EACAnB,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCoB,gBAAgB,CAAGhD,MAAM,CAACyD,KAAP,CAAaC,WAAb,CAAyBV,gBAAzB,CAAH,CAAgD,KAAnG,EACArB,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCqB,kBAAkB,CAAGjD,MAAM,CAACyD,KAAP,CAAaC,WAAb,CAAyBT,kBAAzB,CAAH,CAAkD,KAAzG,EACAtB,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCuB,aAAhC,EACAxB,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAA2CyB,gBAA3C,EACA1B,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwC2B,mBAAxC,EACA5B,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCwB,cAAjC,EACD,CACF,CAxBQ,CAwBN,CACD1B,eADC,CAEDZ,OAFC,CAGDgC,eAHC,CAIDE,gBAJC,CAKDC,kBALC,CAMDE,aANC,CAODC,cAPC,CAQDC,gBARC,CASDV,YATC,CAUDY,mBAVC,CAxBM,CAAT,CAqCA,GAAMI,CAAAA,aAAa,CAAGxF,WAAW,sEAAC,4KACTmC,CAAAA,SAAS,CAACsD,OAAV,EADS,QAC1B7B,QAD0B,gBAEhClB,mBAAmB,CAAC,GAAIb,CAAAA,MAAM,CAACO,SAAP,CAAiBsD,YAArB,CAAkC9B,QAAlC,CAAD,CAAnB,CAEAA,QAAQ,CAAC+B,EAAT,CAAY,cAAZ,CAA4B,SAAAjB,OAAO,CAAI,CACrClB,OAAO,CAACC,GAAR,4BAAgCiB,OAAhC,0BACAhC,mBAAmB,CAAC,GAAIb,CAAAA,MAAM,CAACO,SAAP,CAAiBsD,YAArB,CAAkC9B,QAAlC,CAAD,CAAnB,CACD,CAHD,EAKAA,QAAQ,CAAC+B,EAAT,CAAY,iBAAZ,CAA+B,UAAM,CACnCnC,OAAO,CAACC,GAAR,qBACAf,mBAAmB,CAAC,GAAIb,CAAAA,MAAM,CAACO,SAAP,CAAiBsD,YAArB,CAAkC9B,QAAlC,CAAD,CAAnB,CACD,CAHD,EAKA;AACAA,QAAQ,CAAC+B,EAAT,CAAY,YAAZ,CAA0B,SAACC,IAAD,CAAOC,MAAP,CAAkB,CAC1CrC,OAAO,CAACC,GAAR,CAAYmC,IAAZ,CAAkBC,MAAlB,EACAnC,iBAAiB,GAClB,CAHD,EAIA;AAnBgC,wDAAD,GAoB9B,CAAChB,mBAAD,CApB8B,CAAjC,CAsBAzC,SAAS,CAAC,UAAM,CACd,GAAIkC,SAAS,CAAC2D,cAAd,CAA8B,CAC5BN,aAAa,GACd,CACF,CAJQ,CAIN,CAACA,aAAD,CAJM,CAAT,CAMA,GAAMO,CAAAA,eAAe,CAAG7C,aAAa,EAAIA,aAAa,CAAC8C,UAA/B,EAA6ChD,aAAa,CAACR,IAAd,CAAmByD,OAAnB,CAA2B,OAA3B,IAAwC,CAAC,CAA9G,CAEA,mBACE,aAAK,SAAS,CAAC,KAAf,wBAEE,KAAC,MAAD,IAFF,cAGE,KAAC,cAAD,EACE,YAAY,CAAEjE,YADhB,CAEE,YAAY,CAAEwC,YAFhB,CAGE,eAAe,CAAEG,eAHnB,CAIE,aAAa,CAAE3B,aAJjB,CAKE,iBAAiB,CAAEU,iBALrB,CAME,oBAAoB,CAAExB,oBANxB,EAHF,cAWE,MAAC,IAAD,EAAM,KAAK,CAAE,CAAEgE,SAAS,CAAE,QAAb,CAAuBC,SAAS,CAAE,EAAlC,CAAb,CAAqD,YAAY,CAAE,CAACpD,QAAQ,CAACqD,QAAV,CAAnE,CAAwF,IAAI,CAAC,YAA7F,wBACE,KAAC,IAAD,CAAM,IAAN,wBACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,sBADF,EAAe,GAAf,CADF,cAIE,KAAC,IAAD,CAAM,IAAN,wBACE,KAAC,IAAD,EAAM,EAAE,CAAC,eAAT,6BADF,EAAe,eAAf,CAJF,GAXF,cAqBE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,uBAEE,KAAC,IAAD,EAAM,gBAAgB,CAAEvB,gBAAxB,CAA0C,aAAa,CAAEG,aAAzD,EAFF,EADF,cAKE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,eAAlB,uBAGE,KAAC,QAAD,EACE,IAAI,CAAC,cADP,CAEE,KAAK,CAAEf,KAFT,CAGE,MAAM,CAAEG,UAHV,CAIE,QAAQ,CAAElB,aAJZ,CAKE,OAAO,CAAEP,OALX,CAME,aAAa,CAAEM,aANjB,CAOE,cAAc,CAAE8B,cAPlB,EAHF,EALF,GArBF,cA0CE,KAAC,WAAD,IA1CF,cA6CE,aAAK,KAAK,CAAE,CAAEsB,QAAQ,CAAE,OAAZ,CAAqBH,SAAS,CAAE,OAAhC,CAAyCI,KAAK,CAAE,CAAhD,CAAmDC,GAAG,CAAE,CAAxD,CAA2DC,OAAO,CAAE,EAApE,CAAZ,wBACE,aAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,IAAI,CAAE,CAAzB,CAA4BC,UAAU,CAAE,QAAxC,CAAZ,WACGzE,oBAAoB,eACnB,YAAK,KAAK,CAAE,CAAE0E,WAAW,CAAE,EAAf,CAAZ,uBACE,KAAC,aAAD,EACE,cAAc,CAAErE,cADlB,CAEE,eAAe,CAAEM,eAFnB,CAGE,kBAAkB,CAAEC,kBAHtB,EADF,EAFJ,cAUE,KAAC,OAAD,EACE,SAAS,CAAEb,iBADb,CAEE,OAAO,CAAEU,OAFX,CAGE,aAAa,CAAEO,aAHjB,CAIE,UAAU,CAAEkB,UAJd,CAKE,eAAe,CAAEb,eALnB,CAME,KAAK,CAAEU,KANT,CAOE,SAAS,CAAE9B,SAPb,CAQE,aAAa,CAAEqD,aARjB,CASE,iBAAiB,CAAE9B,iBATrB,CAUE,aAAa,CAAET,aAVjB,EAVF,GADF,CAwBG4B,gBAAgB,CAACgC,GAAjB,CAAqBhF,MAAM,CAACiF,SAAP,CAAiBC,IAAjB,CAAsB,GAAtB,CAArB,gBACC,KAAC,UAAD,EAAY,aAAa,CAAE7D,aAA3B,CAA0C,aAAa,CAAEF,aAAzD,CAAwE,OAAO,CAAEL,OAAjF,EAzBJ,GA7CF,cA2EE,aAAK,KAAK,CAAE,CAAE0D,QAAQ,CAAE,OAAZ,CAAqBH,SAAS,CAAE,MAAhC,CAAwCc,IAAI,CAAE,CAA9C,CAAiDC,MAAM,CAAE,EAAzD,CAA6DT,OAAO,CAAE,EAAtE,CAAZ,wBACE,MAAC,GAAD,EAAK,KAAK,CAAC,QAAX,CAAoB,MAAM,CAAE,CAAC,CAAD,CAAI,CAAJ,CAA5B,wBACE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,uBACE,KAAC,IAAD,EAAM,KAAK,CAAEvC,KAAb,CAAoB,OAAO,CAAEtB,OAA7B,CAAsC,QAAQ,CAAE1B,QAAhD,EADF,EADF,cAKE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,CAAc,KAAK,CAAE,CAAEiF,SAAS,CAAE,QAAb,CAAuBgB,OAAO,CAAE,GAAhC,CAArB,uBACE,KAAC,QAAD,EAAU,QAAQ,CAAEhD,QAApB,EADF,EALF,cAQE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,CAAc,KAAK,CAAE,CAAEgC,SAAS,CAAE,QAAb,CAAuBgB,OAAO,CAAE,CAAhC,CAArB,uBACE,MAAC,MAAD,EACE,OAAO,CAAE,kBAAM,CACbnD,MAAM,CAACoD,IAAP,CAAY,8CAAZ,EACD,CAHH,CAIE,IAAI,CAAC,OAJP,CAKE,KAAK,CAAC,OALR,wBAOE,aAAM,KAAK,CAAE,CAAEP,WAAW,CAAE,CAAf,CAAb,CAAiC,IAAI,CAAC,KAAtC,CAA4C,aAAW,SAAvD,0BAPF,aADF,EARF,GADF,cAyBE,KAAC,GAAD,EAAK,KAAK,CAAC,QAAX,CAAoB,MAAM,CAAE,CAAC,CAAD,CAAI,CAAJ,CAA5B,uBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,UAEI,kEACAb,eAAe,cACb,KAAC,MAAD,EAAQ,aAAa,CAAE7C,aAAvB,CAAsC,KAAK,CAAEe,KAA7C,CAAoD,WAAW,CAAEV,eAAjE,EADa,CAGb,EANN,EADF,EAzBF,GA3EF,GADF,CAoHD,CAED,cAAelB,CAAAA,GAAf","sourcesContent":["import { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n  NetworkDisplay,\n  FaucetHint,\n  NetworkSwitch,\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, ExampleUI, Hints, Subgraph } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst initialNetwork = NETWORKS['rinkeby']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\nconst USE_NETWORK_SELECTOR = false;\n\nconst web3Modal = Web3ModalSetup();\n\n// üõ∞ providers\nconst providers = [\n  \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n  `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n  \"https://rpc.scaffoldeth.io:48544\",\n];\n\nfunction App(props) {\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [initialNetwork.name, \"mainnet\", \"rinkeby\"];\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const location = useLocation();\n\n  const targetNetwork = NETWORKS[selectedNetwork];\n\n  // üî≠ block explorer URL\n  const blockExplorer = targetNetwork.blockExplorer;\n\n  // load all your providers\n  const localProvider = useStaticJsonRPC([\n    process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n  ]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`);\n\n  // üõ∞ providers\n  if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n    localChainId,\n    myMainnetDAIBalance,\n  ]);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n    // eslint-disable-next-line\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      <NetworkDisplay\n        NETWORKCHECK={NETWORKCHECK}\n        localChainId={localChainId}\n        selectedChainId={selectedChainId}\n        targetNetwork={targetNetwork}\n        logoutOfWeb3Modal={logoutOfWeb3Modal}\n        USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n      />\n      <Menu style={{ textAlign: \"center\", marginTop: 40 }} selectedKeys={[location.pathname]} mode=\"horizontal\">\n        <Menu.Item key=\"/\">\n          <Link to=\"/\">App Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/yourcontract\">\n          <Link to=\"/yourcontract\">Create Election</Link>\n        </Menu.Item>\n\n      </Menu>\n\n      <Switch>\n        <Route exact path=\"/\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          <Home yourLocalBalance={yourLocalBalance} readContracts={readContracts} />\n        </Route>\n        <Route exact path=\"/yourcontract\">\n\n\n          <Contract\n            name=\"YourContract\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n        </Route>\n        \n      </Switch>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <div style={{ display: \"flex\", flex: 1, alignItems: \"center\" }}>\n          {USE_NETWORK_SELECTOR && (\n            <div style={{ marginRight: 20 }}>\n              <NetworkSwitch\n                networkOptions={networkOptions}\n                selectedNetwork={selectedNetwork}\n                setSelectedNetwork={setSelectedNetwork}\n              />\n            </div>\n          )}\n          <Account\n            useBurner={USE_BURNER_WALLET}\n            address={address}\n            localProvider={localProvider}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            price={price}\n            web3Modal={web3Modal}\n            loadWeb3Modal={loadWeb3Modal}\n            logoutOfWeb3Modal={logoutOfWeb3Modal}\n            blockExplorer={blockExplorer}\n          />\n        </div>\n        {yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && (\n          <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n        )}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}