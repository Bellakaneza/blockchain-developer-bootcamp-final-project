{
  "id": "d691b958f7ee5a3c115a512df25388d5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/YourContract.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n\n/** \n * @title PTBallot\n * @dev Implements publically viewable party designation and time limitation to the standard delegate voting contract\n */\n\ncontract PTBallot {\n   \n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        address delegate; // person delegated to\n        uint vote;   // index of the voted candidate\n    }\n\n    struct Candidate {\n        // If you can limit the length to a certain number of bytes, \n        // always use one of bytes1 to bytes32 because they are much cheaper\n        bytes32 name;   // short name (up to 32 bytes)\n        bytes32 party; // party name (up to 32 bytes)\n        uint voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    uint public expirationDate;\n\n    mapping(address => Voter) private voters;\n\n    Candidate[] public candidates;\n\n    /** \n     * @dev Create a new ballot to choose one of 'candidateNames'.\n     * @dev Limits amountOfDays to uint8 (0-255) to limit the max ballot timelength.\n     * @param candidateNames names of candidates\n     * @param candidateParties names of parties\n     * @param amountOfDays number of days ballot is open\n    \n     */\n    constructor(bytes32[] memory candidateNames, bytes32[] memory candidateParties, address chairAddress, uint8 amountOfDays) {\n        require(candidateNames.length == candidateParties.length);\n        require(amountOfDays != 0);\n        chairperson = chairAddress;\n        voters[chairperson].weight = 1;\n\n        expirationDate = block.timestamp + (amountOfDays * 1 days);\n\n        for (uint i = 0; i < candidateNames.length; i++) {\n            // 'Candidate({...})' creates a temporary\n            // Candidate object and 'candidates.push(...)'\n            // appends it to the end of 'candidates'.\n            candidates.push(Candidate({\n                name: candidateNames[i],\n                party: candidateParties[i],\n                voteCount: 0\n            }));\n        }\n    }\n\n\n    //@dev: modifier to restrict voting functions unless the ballot is within the expirationDate;\n    modifier isNotExpired() \n    {\n        require(block.timestamp < expirationDate);\n            _;\n    }\n        \n    \n    /** \n     * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n     * @param voter address of voter\n     */\n    function giveRightToVote(address voter) public isNotExpired {\n        require(\n            msg.sender == chairperson,\n            \"Only chairperson can give right to vote.\"\n        );\n        require(\n            !voters[voter].voted,\n            \"The voter already voted.\"\n        );\n        require(voters[voter].weight == 0);\n        voters[voter].weight = 1;\n    }\n\n    /**\n     * @dev Delegate your vote to the voter 'to'.\n     * @param to address to which vote is delegated\n     */\n    function delegate(address to) public isNotExpired {\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted, \"You already voted.\");\n        require(to != msg.sender, \"Self-delegation is disallowed.\");\n\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender, \"Found loop in delegation.\");\n        }\n        sender.voted = true;\n        sender.delegate = to;\n        Voter storage delegate_ = voters[to];\n        if (delegate_.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            candidates[delegate_.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate_.weight += sender.weight;\n        }\n    }\n\n    /**\n     * @dev Give your vote (including votes delegated to you) to candidate 'candidates[candidate].name'.\n     * @param candidate index of candidate in the candidates array\n     */\n    function vote(uint candidate) public isNotExpired {\n        Voter storage sender = voters[msg.sender];\n        require(sender.weight != 0, \"Has no right to vote\");\n        require(!sender.voted, \"Already voted.\");\n        sender.voted = true;\n        sender.vote = candidate;\n\n        // If 'candidate' is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        candidates[candidate].voteCount += sender.weight;\n    }\n\n    /** \n     * @dev Computes the winning candidate taking all previous votes into account.\n     * @return winningCandidate_ index of winning candidate in the candidates array\n     */\n    function winningCandidate() public view\n            returns (uint winningCandidate_)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < candidates.length; p++) {\n            if (candidates[p].voteCount > winningVoteCount) {\n                winningVoteCount = candidates[p].voteCount;\n                winningCandidate_ = p;\n            }\n        }\n    }\n\n    /** \n     * @dev Calls winningCandidate() function to get the index of the winner contained in the candidates array and then\n     * @return winnerName_ the name of the winner\n     * @return winnerParty_ the party of the winner\n     */\n    function winnerDetails() public view\n            returns (bytes32 winnerName_, bytes32 winnerParty_)\n    {\n        winnerName_ = candidates[winningCandidate()].name;\n        winnerParty_ = candidates[winningCandidate()].party;\n    }\n    \n\n    /** \n     * @dev Gets the time left for a ballot by subtracting the expiration date from the current date.\n     * @return endDate_ the time left, in days, before the ballot expires\n\n     */\n     function ballotEndDate() public view\n            returns (uint endDate_)\n    {\n        endDate_ = expirationDate - block.timestamp;\n    }\n}\n/** \n * @title YourContract\n   @author Bella Kaneza\n   @notice You can use this control contract to create and view Ballots using the PTBallot contract\n //@dev Functions are designed to limit gas cost and deploy a Ballot with maximum visibility and minimal issue\n */\n \ncontract YourContract {\n    PTBallot public newBallot;\n    address[] public deployedBallots;\n    mapping(uint256 => address) public idToBallot;\n    uint256 public ballotId;\n\n        /**\n     * @notice This function starts an election by deploying a new PTBallot contract\n     * @dev each parameter goes into the constructor of the PTBallot contract to deploy\n     * @param candidateNames names of candidates\n     * @param candidateParties names of parties\n     * @param myAddress address set as the owner of the ballot\n     * @param amountOfDays number of days ballot is open (limited from 0-255)\n     */\n    function startElec (bytes32[] memory candidateNames, bytes32[] memory candidateParties, address myAddress, uint8 amountOfDays) public returns(uint256)  {\n            newBallot = new PTBallot (candidateNames, candidateParties, myAddress, amountOfDays);\n            deployedBallots.push(address(newBallot));\n            ballotId += 1;\n            idToBallot[ballotId] = address(newBallot);\n            return ballotId;\n        }\n \n//@dev function to get all of the Ballots that have been deployed\n//@return deployedBallots list of all contract addresses of deployed Ballots\n    function getsDeployedBallots() public view returns( address[] memory)\n    {return deployedBallots;}\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/YourContract.sol": {
        "PTBallot": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "candidateNames",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "candidateParties",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "address",
                  "name": "chairAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "amountOfDays",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ballotEndDate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "endDate_",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "candidates",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "name",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "party",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "voteCount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "chairperson",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "delegate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "expirationDate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                }
              ],
              "name": "giveRightToVote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "candidate",
                  "type": "uint256"
                }
              ],
              "name": "vote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "winnerDetails",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "winnerName_",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "winnerParty_",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "winningCandidate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "winningCandidate_",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Implements publically viewable party designation and time limitation to the standard delegate voting contract",
            "kind": "dev",
            "methods": {
              "ballotEndDate()": {
                "details": "Gets the time left for a ballot by subtracting the expiration date from the current date.",
                "returns": {
                  "endDate_": "the time left, in days, before the ballot expires"
                }
              },
              "constructor": {
                "details": "Create a new ballot to choose one of 'candidateNames'.Limits amountOfDays to uint8 (0-255) to limit the max ballot timelength.",
                "params": {
                  "amountOfDays": "number of days ballot is open",
                  "candidateNames": "names of candidates",
                  "candidateParties": "names of parties"
                }
              },
              "delegate(address)": {
                "details": "Delegate your vote to the voter 'to'.",
                "params": {
                  "to": "address to which vote is delegated"
                }
              },
              "giveRightToVote(address)": {
                "details": "Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.",
                "params": {
                  "voter": "address of voter"
                }
              },
              "vote(uint256)": {
                "details": "Give your vote (including votes delegated to you) to candidate 'candidates[candidate].name'.",
                "params": {
                  "candidate": "index of candidate in the candidates array"
                }
              },
              "winnerDetails()": {
                "details": "Calls winningCandidate() function to get the index of the winner contained in the candidates array and then",
                "returns": {
                  "winnerName_": "the name of the winner",
                  "winnerParty_": "the party of the winner"
                }
              },
              "winningCandidate()": {
                "details": "Computes the winning candidate taking all previous votes into account.",
                "returns": {
                  "winningCandidate_": "index of winning candidate in the candidates array"
                }
              }
            },
            "title": "PTBallot",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2743:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "89:855:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "138:24:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "147:5:1"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "154:5:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "140:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "140:20:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "140:20:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "117:6:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "125:4:1",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "113:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "113:17:1"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:3:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "109:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "109:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "102:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "102:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "99:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "171:23:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "187:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "181:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "181:13:1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "175:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "203:14:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "213:4:1",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "207:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "226:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:2:1",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "240:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "240:10:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "236:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "236:18:1"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "230:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "279:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "279:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "279:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "269:2:1"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "266:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "266:10:1"
                              },
                              "nodeType": "YulIf",
                              "src": "263:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "308:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "322:1:1",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "325:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "318:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "318:10:1"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "312:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "337:23:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "357:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "351:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "351:9:1"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "341:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "369:56:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "391:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "407:2:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "411:2:1",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "403:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "403:11:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "420:2:1",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "416:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "416:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "399:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "399:25:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "387:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "387:38:1"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "373:10:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "484:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "486:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "486:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "486:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "443:10:1"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "455:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "440:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "440:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "463:10:1"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "475:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "460:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "460:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "437:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "437:46:1"
                              },
                              "nodeType": "YulIf",
                              "src": "434:2:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "522:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "526:10:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "515:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "515:22:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "515:22:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "546:17:1",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "557:6:1"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "550:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "579:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "587:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "572:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "572:18:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "572:18:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "599:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "610:6:1"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "606:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "606:15:1"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "599:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "630:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "645:6:1"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "653:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "641:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "641:15:1"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "634:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "702:24:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "711:5:1"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "718:5:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "704:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "704:20:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "704:20:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "679:6:1"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "687:2:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "675:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "675:15:1"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "692:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "671:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "671:24:1"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "697:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "668:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "668:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "665:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "735:14:1",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "744:5:1"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "739:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "803:111:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "824:3:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "835:3:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "829:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "829:10:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "817:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "817:23:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "817:23:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "853:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "864:3:1"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "869:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "860:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "860:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "853:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "885:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "896:3:1"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "901:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "892:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "892:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "885:3:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "769:1:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "772:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "766:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "766:9:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "776:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "778:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "787:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "790:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "783:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "783:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "778:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "762:3:1",
                                "statements": []
                              },
                              "src": "758:156:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "923:15:1",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "932:6:1"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "923:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_bytes32_dyn_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "63:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "71:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "79:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14:930:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1129:810:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1176:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1185:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1193:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1178:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1178:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1178:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1150:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1159:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1146:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1146:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1142:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1142:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1139:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1211:30:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1231:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1225:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1225:16:1"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1215:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1250:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1268:2:1",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1272:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1264:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1264:10:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1276:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1260:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1260:18:1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1254:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1305:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1314:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1322:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1307:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1307:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1307:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1293:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1301:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1290:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1290:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1287:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1340:82:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1394:9:1"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1405:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1390:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1390:22:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1414:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_bytes32_dyn_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1350:39:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1350:72:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1340:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1431:41:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1457:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1468:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1453:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1453:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1447:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1447:25:1"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1435:8:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1501:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1510:6:1"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1518:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1503:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1503:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1503:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1487:8:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1497:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1484:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1484:16:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1481:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1536:84:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1590:9:1"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1601:8:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1586:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1586:24:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1612:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_bytes32_dyn_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1546:39:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1546:74:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1536:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1629:38:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1652:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1663:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1648:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1648:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1642:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1642:25:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1633:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1730:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1739:6:1"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1747:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1732:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1732:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1732:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1689:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1700:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1715:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1720:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1711:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1711:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1724:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "1707:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1707:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1696:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1696:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1686:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1686:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1679:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1679:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1676:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1765:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1775:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1765:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1789:40:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1814:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1825:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1810:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1810:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1804:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1804:25:1"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1793:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1881:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1890:6:1"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1898:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1883:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1883:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1883:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1851:7:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1864:7:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1873:4:1",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1860:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1860:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1848:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1848:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1841:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1841:39:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1838:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1916:17:1",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1926:7:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1916:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint8_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1071:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1082:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1094:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1102:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1110:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1118:6:1",
                            "type": ""
                          }
                        ],
                        "src": "949:990:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1992:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2019:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2021:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2021:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2021:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2008:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "2015:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2011:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2011:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2005:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2005:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2002:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2050:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2061:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2064:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2057:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2057:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "2050:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1975:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1978:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "1984:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1944:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2128:209:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2138:18:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2148:8:1",
                                "type": "",
                                "value": "0xffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2142:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2165:21:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2180:1:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2183:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2176:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2176:10:1"
                              },
                              "variables": [
                                {
                                  "name": "x_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2169:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2195:21:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2210:1:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2213:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2206:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2206:10:1"
                              },
                              "variables": [
                                {
                                  "name": "y_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2199:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2276:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2278:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2278:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2278:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2246:3:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2239:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2239:11:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2232:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2232:19:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2256:3:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2265:2:1"
                                          },
                                          {
                                            "name": "x_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2269:3:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "2261:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2261:12:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2253:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2253:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2228:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2228:47:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2225:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2307:24:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2322:3:1"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2327:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "2318:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2318:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "2307:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "2107:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "2110:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "2116:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2077:260:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2389:88:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2420:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2422:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2422:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2422:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2405:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2416:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2412:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2412:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2402:17:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2399:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2451:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2462:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2469:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2458:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2458:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "2451:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2371:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "2381:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2342:135:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2514:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2531:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2538:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2543:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2534:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2534:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2524:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2524:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2524:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2571:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2574:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2564:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2564:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2564:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2595:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2598:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2588:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2588:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2588:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2482:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2646:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2663:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2670:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2675:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2666:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2666:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2656:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2656:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2656:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2703:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2706:4:1",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2696:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2696:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2696:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2727:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2730:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2720:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2720:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2720:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2614:127:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_array_bytes32_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let _3 := sub(shl(64, 1), 1)\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_array_bytes32_dyn_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_array_bytes32_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value2, value2) }\n        value2 := value\n        let value_1 := mload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(value3, value3) }\n        value3 := value_1\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint24(x, y) -> product\n    {\n        let _1 := 0xffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b5060405162000b5e38038062000b5e833981016040819052620000349162000218565b82518451146200004357600080fd5b60ff81166200005157600080fd5b600080546001600160a01b0319166001600160a01b03841690811782558152600260205260409020600190556200008f60ff821662015180620002d4565b620000a09062ffffff1642620002b9565b60015560005b8451811015620001665760036040518060600160405280878481518110620000de57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020018684815181106200010c57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825260009181018290528354600181810186559483529181902083516003909302019182558201519281019290925560400151600290910155806200015d8162000302565b915050620000a6565b50505050506200034c565b600082601f83011262000182578081fd5b815160206001600160401b0380831115620001a157620001a162000336565b8260051b604051601f19603f83011681018181108482111715620001c957620001c962000336565b60405284815283810192508684018288018501891015620001e8578687fd5b8692505b858310156200020c578051845292840192600192909201918401620001ec565b50979650505050505050565b600080600080608085870312156200022e578384fd5b84516001600160401b038082111562000245578586fd5b620002538883890162000171565b9550602087015191508082111562000269578485fd5b50620002788782880162000171565b604087015190945090506001600160a01b038116811462000297578283fd5b606086015190925060ff81168114620002ae578182fd5b939692955090935050565b60008219821115620002cf57620002cf62000320565b500190565b600062ffffff80831681851681830481118215151615620002f957620002f962000320565b02949350505050565b600060001982141562000319576200031962000320565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610802806200035c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638733902011610066578063873390201461011e5780638f620487146101345780639e7b8d611461013d578063d28178d714610150578063ed8bddeb1461015857600080fd5b80630121b93f146100985780632e4176cf146100ad5780633477ee2e146100dd5780635c19a95c1461010b575b600080fd5b6100ab6100a6366004610754565b610175565b005b6000546100c0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f06100eb366004610754565b610286565b604080519384526020840192909252908201526060016100d4565b6100ab610119366004610726565b6102b9565b6101266104d4565b6040519081526020016100d4565b61012660015481565b6100ab61014b366004610726565b6104e9565b61012661060e565b6101606106a7565b604080519283526020830191909152016100d4565b600154421061018357600080fd5b33600090815260026020526040902080546101dc5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102225760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101d3565b6001818101805460ff19169091179055600281018290558054600380548490811061025d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201600082825461027d919061076c565b90915550505050565b6003818154811061029657600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60015442106102c757600080fd5b336000908152600260205260409020600181015460ff16156103205760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b60448201526064016101d3565b6001600160a01b0382163314156103795760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e000060448201526064016101d3565b6001600160a01b038281166000908152600260205260409020600101546101009004161561041c576001600160a01b03918216600090815260026020526040902060010154610100900490911690338214156104175760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e0000000000000060448201526064016101d3565b610379565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526002602052604090209081015460ff16156104b5578160000154600382600201548154811061048a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160008282546104aa919061076c565b909155506104cf9050565b8154815482906000906104c990849061076c565b90915550505b505050565b6000426001546104e49190610784565b905090565b60015442106104f757600080fd5b6000546001600160a01b031633146105625760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b60648201526084016101d3565b6001600160a01b03811660009081526002602052604090206001015460ff16156105ce5760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101d3565b6001600160a01b038116600090815260026020526040902054156105f157600080fd5b6001600160a01b0316600090815260026020526040902060019055565b600080805b6003548110156106a257816003828154811061063f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201541115610690576003818154811061067857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016002015491508092505b8061069a8161079b565b915050610613565b505090565b60008060036106b461060e565b815481106106d257634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154915060036106f061060e565b8154811061070e57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015490509091565b600060208284031215610737578081fd5b81356001600160a01b038116811461074d578182fd5b9392505050565b600060208284031215610765578081fd5b5035919050565b6000821982111561077f5761077f6107b6565b500190565b600082821015610796576107966107b6565b500390565b60006000198214156107af576107af6107b6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122017325b6f2ab3429d0be66068daf38fbcdb306cef2f81eb9e28766e1c778f1ee464736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB5E CODESIZE SUB DUP1 PUSH3 0xB5E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x218 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH3 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND PUSH3 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE PUSH3 0x8F PUSH1 0xFF DUP3 AND PUSH3 0x15180 PUSH3 0x2D4 JUMP JUMPDEST PUSH3 0xA0 SWAP1 PUSH3 0xFFFFFF AND TIMESTAMP PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x166 JUMPI PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0xDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x10C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x3 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH3 0x15D DUP2 PUSH3 0x302 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x34C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x182 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT ISZERO PUSH3 0x1A1 JUMPI PUSH3 0x1A1 PUSH3 0x336 JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C9 PUSH3 0x336 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH3 0x1E8 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH3 0x20C JUMPI DUP1 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH3 0x1EC JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x22E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x245 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH3 0x253 DUP9 DUP4 DUP10 ADD PUSH3 0x171 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x269 JUMPI DUP5 DUP6 REVERT JUMPDEST POP PUSH3 0x278 DUP8 DUP3 DUP9 ADD PUSH3 0x171 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x297 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x2AE JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2CF JUMPI PUSH3 0x2CF PUSH3 0x320 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F9 PUSH3 0x320 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x319 JUMPI PUSH3 0x319 PUSH3 0x320 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x802 DUP1 PUSH3 0x35C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87339020 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x87339020 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8F620487 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xD28178D7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xED8BDDEB EQ PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x126 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x160 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x25D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x41C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B5 JUMPI DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x3 DUP3 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CF SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C9 SWAP1 DUP5 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x1 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6A2 JUMPI DUP2 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x63F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x690 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x69A DUP2 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x613 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH2 0x6B4 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x3 PUSH2 0x6F0 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x737 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x765 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x7B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x7B6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7AF JUMPI PUSH2 0x7AF PUSH2 0x7B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ORIGIN JUMPDEST PUSH16 0x2AB3429D0BE66068DAF38FBCDB306CEF 0x2F DUP2 0xEB SWAP15 0x28 PUSH23 0x6E1C778F1EE464736F6C63430008040033000000000000 ",
              "sourceMap": "214:5720:0:-:0;;;1307:785;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1472:16;:23;1447:14;:21;:48;1439:57;;;;;;1514:17;;;1506:26;;;;;;1542:11;:26;;-1:-1:-1;;;;;;1542:26:0;-1:-1:-1;;;;;1542:26:0;;;;;;;1578:19;;:6;:19;;;;;-1:-1:-1;1578:30:0;;1655:21;;;;1670:6;1655:21;:::i;:::-;1636:41;;;;:15;:41;:::i;:::-;1619:14;:58;1693:6;1688:398;1709:14;:21;1705:1;:25;1688:398;;;1918:10;1934:140;;;;;;;;1968:14;1983:1;1968:17;;;;;;-1:-1:-1;;;1968:17:0;;;;;;;;;;;;;;;1934:140;;;;2010:16;2027:1;2010:19;;;;;;-1:-1:-1;;;2010:19:0;;;;;;;;;;;;;;;;;;;;1934:140;;2058:1;1934:140;;;;;;1918:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:3;;;;:::i;:::-;;;;1688:398;;;;1307:785;;;;214:5720;;14:930:1;79:5;132:3;125:4;117:6;113:17;109:27;99:2;;154:5;147;140:20;99:2;181:13;;213:4;-1:-1:-1;266:10:1;;;263:2;;;279:18;;:::i;:::-;325:2;322:1;318:10;357:2;351:9;420:2;416:7;411:2;407;403:11;399:25;391:6;387:38;475:6;463:10;460:22;455:2;443:10;440:18;437:46;434:2;;;486:18;;:::i;:::-;522:2;515:22;572:18;;;606:15;;;;-1:-1:-1;641:15:1;;;675;;;671:24;;668:33;-1:-1:-1;665:2:1;;;718:5;711;704:20;665:2;744:5;735:14;;758:156;772:2;769:1;766:9;758:156;;;829:10;;817:23;;860:12;;;;790:1;783:9;;;;;892:12;;758:156;;;-1:-1:-1;932:6:1;89:855;-1:-1:-1;;;;;;;89:855:1:o;949:990::-;1094:6;1102;1110;1118;1171:3;1159:9;1150:7;1146:23;1142:33;1139:2;;;1193:6;1185;1178:22;1139:2;1225:16;;-1:-1:-1;1290:14:1;;;1287:2;;;1322:6;1314;1307:22;1287:2;1350:72;1414:7;1405:6;1394:9;1390:22;1350:72;:::i;:::-;1340:82;;1468:2;1457:9;1453:18;1447:25;1431:41;;1497:2;1487:8;1484:16;1481:2;;;1518:6;1510;1503:22;1481:2;;1546:74;1612:7;1601:8;1590:9;1586:24;1546:74;:::i;:::-;1663:2;1648:18;;1642:25;1536:84;;-1:-1:-1;1642:25:1;-1:-1:-1;;;;;;1696:31:1;;1686:42;;1676:2;;1747:6;1739;1732:22;1676:2;1825;1810:18;;1804:25;1775:5;;-1:-1:-1;1873:4:1;1860:18;;1848:31;;1838:2;;1898:6;1890;1883:22;1838:2;1129:810;;;;-1:-1:-1;1129:810:1;;-1:-1:-1;;1129:810:1:o;1944:128::-;1984:3;2015:1;2011:6;2008:1;2005:13;2002:2;;;2021:18;;:::i;:::-;-1:-1:-1;2057:9:1;;1992:80::o;2077:260::-;2116:7;2148:8;2183:2;2180:1;2176:10;2213:2;2210:1;2206:10;2269:3;2265:2;2261:12;2256:3;2253:21;2246:3;2239:11;2232:19;2228:47;2225:2;;;2278:18;;:::i;:::-;2318:13;;2128:209;-1:-1:-1;;;;2128:209:1:o;2342:135::-;2381:3;-1:-1:-1;;2402:17:1;;2399:2;;;2422:18;;:::i;:::-;-1:-1:-1;2469:1:1;2458:13;;2389:88::o;2482:127::-;2543:10;2538:3;2534:20;2531:1;2524:31;2574:4;2571:1;2564:15;2598:4;2595:1;2588:15;2614:127;2675:10;2670:3;2666:20;2663:1;2656:31;2706:4;2703:1;2696:15;2730:4;2727:1;2720:15;2646:95;214:5720:0;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4533:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:236:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "139:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "147:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "94:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "165:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "191:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "178:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "178:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "169:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "264:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "273:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "281:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "266:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "266:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "266:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "223:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "234:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "249:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "254:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "245:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "245:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "258:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "241:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "241:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "230:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "230:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "220:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "220:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "213:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "213:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "210:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "299:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:306:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "395:120:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "441:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "450:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "458:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "443:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "443:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "443:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "416:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "425:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "412:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "412:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "437:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "408:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "408:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "405:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "476:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "499:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "486:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "486:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "476:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "361:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "372:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "384:6:1",
                            "type": ""
                          }
                        ],
                        "src": "325:190:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "621:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "631:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "643:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "654:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "639:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "639:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "673:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "688:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "704:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "709:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "700:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "700:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "713:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "696:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "696:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "684:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "684:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "666:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "590:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "601:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "612:4:1",
                            "type": ""
                          }
                        ],
                        "src": "520:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "857:119:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "867:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "879:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "890:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "875:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "875:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "867:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "909:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "920:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "902:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "902:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "902:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "947:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "958:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "943:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "943:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "963:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "936:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "936:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "936:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "818:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "829:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "837:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "848:4:1",
                            "type": ""
                          }
                        ],
                        "src": "728:248:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1138:162:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1148:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1160:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1156:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1156:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1148:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1190:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1201:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1183:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1183:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1183:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1228:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1239:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1224:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1224:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1244:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1217:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1217:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1217:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1271:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1282:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1267:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1267:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1287:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1260:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1260:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1260:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256__to_t_bytes32_t_bytes32_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1091:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1102:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1110:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1118:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1129:4:1",
                            "type": ""
                          }
                        ],
                        "src": "981:319:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1479:170:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1496:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1507:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1489:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1489:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1489:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1530:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1541:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1526:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1526:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1546:2:1",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1519:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1519:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1519:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1569:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1580:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1565:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1565:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1585:22:1",
                                    "type": "",
                                    "value": "Has no right to vote"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1558:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1558:50:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1558:50:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1617:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1629:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1640:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1625:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1625:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1617:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1456:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1470:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1305:344:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1828:164:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1845:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1856:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1838:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1838:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1838:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1879:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1890:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1875:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1875:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1895:2:1",
                                    "type": "",
                                    "value": "14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1868:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1868:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1868:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1918:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1929:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1914:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1914:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1934:16:1",
                                    "type": "",
                                    "value": "Already voted."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1907:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1907:44:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1907:44:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1960:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1972:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1983:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1968:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1968:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1960:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1805:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1819:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1654:338:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2171:168:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2188:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2199:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2181:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2181:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2181:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2222:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2233:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2218:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2218:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2238:2:1",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2211:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2211:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2211:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2261:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2272:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2257:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2257:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2277:20:1",
                                    "type": "",
                                    "value": "You already voted."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2250:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2250:48:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2250:48:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2307:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2319:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2330:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2315:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2315:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2307:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2148:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2162:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1997:342:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2518:230:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2535:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2546:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2528:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2528:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2528:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2569:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2580:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2565:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2565:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2585:2:1",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2558:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2558:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2558:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2608:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2619:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2604:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2604:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2624:34:1",
                                    "type": "",
                                    "value": "Only chairperson can give right "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2597:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2597:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2597:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2679:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2690:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2675:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2675:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2695:10:1",
                                    "type": "",
                                    "value": "to vote."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2668:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2668:38:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2668:38:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2715:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2727:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2738:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2723:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2723:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2715:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2495:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2509:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2344:404:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2927:175:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2944:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2955:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2937:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2937:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2937:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2978:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2989:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2974:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2974:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2994:2:1",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2967:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2967:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2967:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3017:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3028:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3013:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3013:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3033:27:1",
                                    "type": "",
                                    "value": "Found loop in delegation."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3006:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3006:55:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3006:55:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3070:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3082:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3093:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3078:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3078:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3070:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2904:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2918:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2753:349:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3281:174:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3298:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3309:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3291:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3291:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3291:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3332:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3343:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3328:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3328:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3348:2:1",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3321:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3321:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3321:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3371:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3382:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3367:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3367:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3387:26:1",
                                    "type": "",
                                    "value": "The voter already voted."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3360:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3360:54:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3360:54:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3423:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3435:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3446:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3431:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3431:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3423:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3258:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3272:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3107:348:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3634:180:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3651:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3662:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3644:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3644:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3644:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3685:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3696:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3681:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3681:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3701:2:1",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3674:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3674:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3674:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3724:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3735:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3720:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3720:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3740:32:1",
                                    "type": "",
                                    "value": "Self-delegation is disallowed."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3713:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3713:60:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3713:60:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3782:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3794:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3805:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3790:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3790:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3782:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3611:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3625:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3460:354:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3920:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3930:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3942:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3953:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3938:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3938:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3930:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3972:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3983:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3965:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3965:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3965:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3889:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3900:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3911:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3819:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4049:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4076:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4078:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4078:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4078:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4065:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "4072:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4068:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4068:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4062:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4062:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4059:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4107:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4118:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4121:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4114:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4114:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "4107:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4032:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4035:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "4041:3:1",
                            "type": ""
                          }
                        ],
                        "src": "4001:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4183:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4205:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4207:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4207:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4207:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4199:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4202:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4196:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4196:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4193:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4236:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4248:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4251:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4244:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4244:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "4236:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4165:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4168:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "4174:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4134:125:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4311:88:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4342:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4344:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4344:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4344:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4327:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4338:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4334:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4334:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "4324:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4324:17:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4321:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4373:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4384:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4391:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4380:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4380:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "4373:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4293:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "4303:3:1",
                            "type": ""
                          }
                        ],
                        "src": "4264:135:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4436:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4453:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4460:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4465:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4456:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4456:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4446:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4446:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4446:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4493:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4496:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4486:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4486:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4486:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4517:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4520:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4510:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4510:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4510:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4404:127:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256__to_t_bytes32_t_bytes32_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Has no right to vote\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only chairperson can give right \")\n        mstore(add(headStart, 96), \"to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Found loop in delegation.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The voter already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Self-delegation is disallowed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80638733902011610066578063873390201461011e5780638f620487146101345780639e7b8d611461013d578063d28178d714610150578063ed8bddeb1461015857600080fd5b80630121b93f146100985780632e4176cf146100ad5780633477ee2e146100dd5780635c19a95c1461010b575b600080fd5b6100ab6100a6366004610754565b610175565b005b6000546100c0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f06100eb366004610754565b610286565b604080519384526020840192909252908201526060016100d4565b6100ab610119366004610726565b6102b9565b6101266104d4565b6040519081526020016100d4565b61012660015481565b6100ab61014b366004610726565b6104e9565b61012661060e565b6101606106a7565b604080519283526020830191909152016100d4565b600154421061018357600080fd5b33600090815260026020526040902080546101dc5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102225760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101d3565b6001818101805460ff19169091179055600281018290558054600380548490811061025d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201600082825461027d919061076c565b90915550505050565b6003818154811061029657600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60015442106102c757600080fd5b336000908152600260205260409020600181015460ff16156103205760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b60448201526064016101d3565b6001600160a01b0382163314156103795760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e000060448201526064016101d3565b6001600160a01b038281166000908152600260205260409020600101546101009004161561041c576001600160a01b03918216600090815260026020526040902060010154610100900490911690338214156104175760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e0000000000000060448201526064016101d3565b610379565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526002602052604090209081015460ff16156104b5578160000154600382600201548154811061048a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160008282546104aa919061076c565b909155506104cf9050565b8154815482906000906104c990849061076c565b90915550505b505050565b6000426001546104e49190610784565b905090565b60015442106104f757600080fd5b6000546001600160a01b031633146105625760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b60648201526084016101d3565b6001600160a01b03811660009081526002602052604090206001015460ff16156105ce5760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101d3565b6001600160a01b038116600090815260026020526040902054156105f157600080fd5b6001600160a01b0316600090815260026020526040902060019055565b600080805b6003548110156106a257816003828154811061063f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201541115610690576003818154811061067857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016002015491508092505b8061069a8161079b565b915050610613565b505090565b60008060036106b461060e565b815481106106d257634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154915060036106f061060e565b8154811061070e57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015490509091565b600060208284031215610737578081fd5b81356001600160a01b038116811461074d578182fd5b9392505050565b600060208284031215610765578081fd5b5035919050565b6000821982111561077f5761077f6107b6565b500190565b600082821015610796576107966107b6565b500390565b60006000198214156107af576107af6107b6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122017325b6f2ab3429d0be66068daf38fbcdb306cef2f81eb9e28766e1c778f1ee464736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87339020 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x87339020 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8F620487 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xD28178D7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xED8BDDEB EQ PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x126 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x160 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x25D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x41C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B5 JUMPI DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x3 DUP3 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CF SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C9 SWAP1 DUP5 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x1 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6A2 JUMPI DUP2 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x63F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x690 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x69A DUP2 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x613 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH2 0x6B4 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x3 PUSH2 0x6F0 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x737 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x765 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x7B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x7B6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7AF JUMPI PUSH2 0x7AF PUSH2 0x7B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ORIGIN JUMPDEST PUSH16 0x2AB3429D0BE66068DAF38FBCDB306CEF 0x2F DUP2 0xEB SWAP15 0x28 PUSH23 0x6E1C778F1EE464736F6C63430008040033000000000000 ",
              "sourceMap": "214:5720:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4075:476;;;;;;:::i;:::-;;:::i;:::-;;830:26;;;;;-1:-1:-1;;;;;830:26:0;;;;;;-1:-1:-1;;;;;684:32:1;;;;666:51;;654:2;639:18;830:26:0;;;;;;;;943:29;;;;;;:::i;:::-;;:::i;:::-;;;;1183:25:1;;;1239:2;1224:18;;1217:34;;;;1267:18;;;1260:34;1171:2;1156:18;943:29:0;1138:162:1;2960:921:0;;;;;;:::i;:::-;;:::i;5795:137::-;;;:::i;:::-;;;3965:25:1;;;3953:2;3938:18;5795:137:0;3920:76:1;863:26:0;;;;;;2468:368;;;;;;:::i;:::-;;:::i;4741:371::-;;;:::i;5357:232::-;;;:::i;:::-;;;;902:25:1;;;958:2;943:18;;936:34;;;;875:18;5357:232:0;857:119:1;4075:476:0;2262:14;;2244:15;:32;2236:41;;;;;;4165:10:::1;4135:20;4158:18:::0;;;:6:::1;:18;::::0;;;;4194:13;;4186:51:::1;;;::::0;-1:-1:-1;;;4186:51:0;;1507:2:1;4186:51:0::1;::::0;::::1;1489:21:1::0;1546:2;1526:18;;;1519:30;-1:-1:-1;;;1565:18:1;;;1558:50;1625:18;;4186:51:0::1;;;;;;;;;4256:12;::::0;::::1;::::0;::::1;;4255:13;4247:40;;;::::0;-1:-1:-1;;;4247:40:0;;1856:2:1;4247:40:0::1;::::0;::::1;1838:21:1::0;1895:2;1875:18;;;1868:30;-1:-1:-1;;;1914:18:1;;;1907:44;1968:18;;4247:40:0::1;1828:164:1::0;4247:40:0::1;4312:4;4297:12:::0;;::::1;:19:::0;;-1:-1:-1;;4297:19:0::1;::::0;;::::1;::::0;;4326:11:::1;::::0;::::1;:23:::0;;;4531:13;;4496:10:::1;:21:::0;;4326:23;;4496:21;::::1;;;-1:-1:-1::0;;;4496:21:0::1;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;4075:476:0:o;943:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;943:29:0;:::o;2960:921::-;2262:14;;2244:15;:32;2236:41;;;;;;3050:10:::1;3020:20;3043:18:::0;;;:6:::1;:18;::::0;;;;3080:12:::1;::::0;::::1;::::0;::::1;;3079:13;3071:44;;;::::0;-1:-1:-1;;;3071:44:0;;2199:2:1;3071:44:0::1;::::0;::::1;2181:21:1::0;2238:2;2218:18;;;2211:30;-1:-1:-1;;;2257:18:1;;;2250:48;2315:18;;3071:44:0::1;2171:168:1::0;3071:44:0::1;3139:10;-1:-1:-1::0;;;;;3133:16:0;::::1;;;3125:59;;;::::0;-1:-1:-1;;;3125:59:0;;3662:2:1;3125:59:0::1;::::0;::::1;3644:21:1::0;3701:2;3681:18;;;3674:30;3740:32;3720:18;;;3713:60;3790:18;;3125:59:0::1;3634:180:1::0;3125:59:0::1;-1:-1:-1::0;;;;;3202:10:0;;::::1;3233:1;3202:10:::0;;;:6:::1;:10;::::0;;;;-1:-1:-1;3202:19:0::1;::::0;::::1;::::0;::::1;;:33:::0;3195:223:::1;;-1:-1:-1::0;;;;;3256:10:0;;::::1;;::::0;;;:6:::1;:10;::::0;;;;-1:-1:-1;3256:19:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;3367:10:::1;3361:16:::0;::::1;;3353:54;;;::::0;-1:-1:-1;;;3353:54:0;;2955:2:1;3353:54:0::1;::::0;::::1;2937:21:1::0;2994:2;2974:18;;;2967:30;3033:27;3013:18;;;3006:55;3078:18;;3353:54:0::1;2927:175:1::0;3353:54:0::1;3195:223;;;3442:4;3427:12:::0;;::::1;:19:::0;;-1:-1:-1;;;;;;3456:20:0;3427:19:::1;-1:-1:-1::0;;;;;3456:20:0;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;3512:10:0;;;:6:::1;:10;::::0;;;;3536:15;;::::1;::::0;3427:19:::1;3536:15;3532:343;;;3704:6;:13;;;3664:10;3675:9;:14;;;3664:26;;;;;;-1:-1:-1::0;;;3664:26:0::1;;;;;;;;;;;;;;;;;;;:36;;;:53;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3532:343:0::1;::::0;-1:-1:-1;3532:343:0::1;;3851:13:::0;;3831:33;;:9;;3851:13:::1;::::0;3831:33:::1;::::0;3851:13;;3831:33:::1;:::i;:::-;::::0;;;-1:-1:-1;;3532:343:0::1;2291:1;;2960:921:::0;:::o;5795:137::-;5853:13;5910:15;5893:14;;:32;;;;:::i;:::-;5882:43;;5795:137;:::o;2468:368::-;2262:14;;2244:15;:32;2236:41;;;;;;2573:11:::1;::::0;-1:-1:-1;;;;;2573:11:0::1;2559:10;:25;2538:112;;;::::0;-1:-1:-1;;;2538:112:0;;2546:2:1;2538:112:0::1;::::0;::::1;2528:21:1::0;2585:2;2565:18;;;2558:30;2624:34;2604:18;;;2597:62;-1:-1:-1;;;2675:18:1;;;2668:38;2723:19;;2538:112:0::1;2518:230:1::0;2538:112:0::1;-1:-1:-1::0;;;;;2682:13:0;::::1;;::::0;;;:6:::1;:13;::::0;;;;-1:-1:-1;2682:19:0::1;::::0;::::1;;2681:20;2660:91;;;::::0;-1:-1:-1;;;2660:91:0;;3309:2:1;2660:91:0::1;::::0;::::1;3291:21:1::0;3348:2;3328:18;;;3321:30;3387:26;3367:18;;;3360:54;3431:18;;2660:91:0::1;3281:174:1::0;2660:91:0::1;-1:-1:-1::0;;;;;2769:13:0;::::1;;::::0;;;:6:::1;:13;::::0;;;;:20;:25;2761:34:::1;;;::::0;::::1;;-1:-1:-1::0;;;;;2805:13:0::1;;::::0;;;:6:::1;:13;::::0;;;;-1:-1:-1;2805:24:0;;2468:368::o;4741:371::-;4802:22;;;4875:231;4896:10;:17;4892:21;;4875:231;;;4964:16;4938:10;4949:1;4938:13;;;;;;-1:-1:-1;;;4938:13:0;;;;;;;;;;;;;;;;;;;:23;;;:42;4934:162;;;5019:10;5030:1;5019:13;;;;;;-1:-1:-1;;;5019:13:0;;;;;;;;;;;;;;;;;;;:23;;;5000:42;;5080:1;5060:21;;4934:162;4915:3;;;;:::i;:::-;;;;4875:231;;;;4741:371;;:::o;5357:232::-;5415:19;5436:20;5486:10;5497:18;:16;:18::i;:::-;5486:30;;;;;;-1:-1:-1;;;5486:30:0;;;;;;;;;;;;;;;;;;;:35;;;5472:49;;5546:10;5557:18;:16;:18::i;:::-;5546:30;;;;;;-1:-1:-1;;;5546:30:0;;;;;;;;;;;;;;;;;;;:36;;;5531:51;;5357:232;;:::o;14:306:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o;325:190::-;384:6;437:2;425:9;416:7;412:23;408:32;405:2;;;458:6;450;443:22;405:2;-1:-1:-1;486:23:1;;395:120;-1:-1:-1;395:120:1:o;4001:128::-;4041:3;4072:1;4068:6;4065:1;4062:13;4059:2;;;4078:18;;:::i;:::-;-1:-1:-1;4114:9:1;;4049:80::o;4134:125::-;4174:4;4202:1;4199;4196:8;4193:2;;;4207:18;;:::i;:::-;-1:-1:-1;4244:9:1;;4183:76::o;4264:135::-;4303:3;-1:-1:-1;;4324:17:1;;4321:2;;;4344:18;;:::i;:::-;-1:-1:-1;4391:1:1;4380:13;;4311:88::o;4404:127::-;4465:10;4460:3;4456:20;4453:1;4446:31;4496:4;4493:1;4486:15;4520:4;4517:1;4510:15"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "410000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "ballotEndDate()": "1084",
                "candidates(uint256)": "3703",
                "chairperson()": "1052",
                "delegate(address)": "infinite",
                "expirationDate()": "1017",
                "giveRightToVote(address)": "23892",
                "vote(uint256)": "66214",
                "winnerDetails()": "infinite",
                "winningCandidate()": "infinite"
              }
            },
            "methodIdentifiers": {
              "ballotEndDate()": "87339020",
              "candidates(uint256)": "3477ee2e",
              "chairperson()": "2e4176cf",
              "delegate(address)": "5c19a95c",
              "expirationDate()": "8f620487",
              "giveRightToVote(address)": "9e7b8d61",
              "vote(uint256)": "0121b93f",
              "winnerDetails()": "ed8bddeb",
              "winningCandidate()": "d28178d7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"candidateNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"candidateParties\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"chairAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"amountOfDays\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ballotEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"endDate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"party\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidate\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"winnerParty_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningCandidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningCandidate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements publically viewable party designation and time limitation to the standard delegate voting contract\",\"kind\":\"dev\",\"methods\":{\"ballotEndDate()\":{\"details\":\"Gets the time left for a ballot by subtracting the expiration date from the current date.\",\"returns\":{\"endDate_\":\"the time left, in days, before the ballot expires\"}},\"constructor\":{\"details\":\"Create a new ballot to choose one of 'candidateNames'.Limits amountOfDays to uint8 (0-255) to limit the max ballot timelength.\",\"params\":{\"amountOfDays\":\"number of days ballot is open\",\"candidateNames\":\"names of candidates\",\"candidateParties\":\"names of parties\"}},\"delegate(address)\":{\"details\":\"Delegate your vote to the voter 'to'.\",\"params\":{\"to\":\"address to which vote is delegated\"}},\"giveRightToVote(address)\":{\"details\":\"Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\",\"params\":{\"voter\":\"address of voter\"}},\"vote(uint256)\":{\"details\":\"Give your vote (including votes delegated to you) to candidate 'candidates[candidate].name'.\",\"params\":{\"candidate\":\"index of candidate in the candidates array\"}},\"winnerDetails()\":{\"details\":\"Calls winningCandidate() function to get the index of the winner contained in the candidates array and then\",\"returns\":{\"winnerName_\":\"the name of the winner\",\"winnerParty_\":\"the party of the winner\"}},\"winningCandidate()\":{\"details\":\"Computes the winning candidate taking all previous votes into account.\",\"returns\":{\"winningCandidate_\":\"index of winning candidate in the candidates array\"}}},\"title\":\"PTBallot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"PTBallot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YourContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n\\n/** \\n * @title PTBallot\\n * @dev Implements publically viewable party designation and time limitation to the standard delegate voting contract\\n */\\n\\ncontract PTBallot {\\n   \\n    struct Voter {\\n        uint weight; // weight is accumulated by delegation\\n        bool voted;  // if true, that person already voted\\n        address delegate; // person delegated to\\n        uint vote;   // index of the voted candidate\\n    }\\n\\n    struct Candidate {\\n        // If you can limit the length to a certain number of bytes, \\n        // always use one of bytes1 to bytes32 because they are much cheaper\\n        bytes32 name;   // short name (up to 32 bytes)\\n        bytes32 party; // party name (up to 32 bytes)\\n        uint voteCount; // number of accumulated votes\\n    }\\n\\n    address public chairperson;\\n\\n    uint public expirationDate;\\n\\n    mapping(address => Voter) private voters;\\n\\n    Candidate[] public candidates;\\n\\n    /** \\n     * @dev Create a new ballot to choose one of 'candidateNames'.\\n     * @dev Limits amountOfDays to uint8 (0-255) to limit the max ballot timelength.\\n     * @param candidateNames names of candidates\\n     * @param candidateParties names of parties\\n     * @param amountOfDays number of days ballot is open\\n    \\n     */\\n    constructor(bytes32[] memory candidateNames, bytes32[] memory candidateParties, address chairAddress, uint8 amountOfDays) {\\n        require(candidateNames.length == candidateParties.length);\\n        require(amountOfDays != 0);\\n        chairperson = chairAddress;\\n        voters[chairperson].weight = 1;\\n\\n        expirationDate = block.timestamp + (amountOfDays * 1 days);\\n\\n        for (uint i = 0; i < candidateNames.length; i++) {\\n            // 'Candidate({...})' creates a temporary\\n            // Candidate object and 'candidates.push(...)'\\n            // appends it to the end of 'candidates'.\\n            candidates.push(Candidate({\\n                name: candidateNames[i],\\n                party: candidateParties[i],\\n                voteCount: 0\\n            }));\\n        }\\n    }\\n\\n\\n    //@dev: modifier to restrict voting functions unless the ballot is within the expirationDate;\\n    modifier isNotExpired() \\n    {\\n        require(block.timestamp < expirationDate);\\n            _;\\n    }\\n        \\n    \\n    /** \\n     * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\\n     * @param voter address of voter\\n     */\\n    function giveRightToVote(address voter) public isNotExpired {\\n        require(\\n            msg.sender == chairperson,\\n            \\\"Only chairperson can give right to vote.\\\"\\n        );\\n        require(\\n            !voters[voter].voted,\\n            \\\"The voter already voted.\\\"\\n        );\\n        require(voters[voter].weight == 0);\\n        voters[voter].weight = 1;\\n    }\\n\\n    /**\\n     * @dev Delegate your vote to the voter 'to'.\\n     * @param to address to which vote is delegated\\n     */\\n    function delegate(address to) public isNotExpired {\\n        Voter storage sender = voters[msg.sender];\\n        require(!sender.voted, \\\"You already voted.\\\");\\n        require(to != msg.sender, \\\"Self-delegation is disallowed.\\\");\\n\\n        while (voters[to].delegate != address(0)) {\\n            to = voters[to].delegate;\\n\\n            // We found a loop in the delegation, not allowed.\\n            require(to != msg.sender, \\\"Found loop in delegation.\\\");\\n        }\\n        sender.voted = true;\\n        sender.delegate = to;\\n        Voter storage delegate_ = voters[to];\\n        if (delegate_.voted) {\\n            // If the delegate already voted,\\n            // directly add to the number of votes\\n            candidates[delegate_.vote].voteCount += sender.weight;\\n        } else {\\n            // If the delegate did not vote yet,\\n            // add to her weight.\\n            delegate_.weight += sender.weight;\\n        }\\n    }\\n\\n    /**\\n     * @dev Give your vote (including votes delegated to you) to candidate 'candidates[candidate].name'.\\n     * @param candidate index of candidate in the candidates array\\n     */\\n    function vote(uint candidate) public isNotExpired {\\n        Voter storage sender = voters[msg.sender];\\n        require(sender.weight != 0, \\\"Has no right to vote\\\");\\n        require(!sender.voted, \\\"Already voted.\\\");\\n        sender.voted = true;\\n        sender.vote = candidate;\\n\\n        // If 'candidate' is out of the range of the array,\\n        // this will throw automatically and revert all\\n        // changes.\\n        candidates[candidate].voteCount += sender.weight;\\n    }\\n\\n    /** \\n     * @dev Computes the winning candidate taking all previous votes into account.\\n     * @return winningCandidate_ index of winning candidate in the candidates array\\n     */\\n    function winningCandidate() public view\\n            returns (uint winningCandidate_)\\n    {\\n        uint winningVoteCount = 0;\\n        for (uint p = 0; p < candidates.length; p++) {\\n            if (candidates[p].voteCount > winningVoteCount) {\\n                winningVoteCount = candidates[p].voteCount;\\n                winningCandidate_ = p;\\n            }\\n        }\\n    }\\n\\n    /** \\n     * @dev Calls winningCandidate() function to get the index of the winner contained in the candidates array and then\\n     * @return winnerName_ the name of the winner\\n     * @return winnerParty_ the party of the winner\\n     */\\n    function winnerDetails() public view\\n            returns (bytes32 winnerName_, bytes32 winnerParty_)\\n    {\\n        winnerName_ = candidates[winningCandidate()].name;\\n        winnerParty_ = candidates[winningCandidate()].party;\\n    }\\n    \\n\\n    /** \\n     * @dev Gets the time left for a ballot by subtracting the expiration date from the current date.\\n     * @return endDate_ the time left, in days, before the ballot expires\\n\\n     */\\n     function ballotEndDate() public view\\n            returns (uint endDate_)\\n    {\\n        endDate_ = expirationDate - block.timestamp;\\n    }\\n}\\n/** \\n * @title YourContract\\n   @author Bella Kaneza\\n   @notice You can use this control contract to create and view Ballots using the PTBallot contract\\n //@dev Functions are designed to limit gas cost and deploy a Ballot with maximum visibility and minimal issue\\n */\\n \\ncontract YourContract {\\n    PTBallot public newBallot;\\n    address[] public deployedBallots;\\n    mapping(uint256 => address) public idToBallot;\\n    uint256 public ballotId;\\n\\n        /**\\n     * @notice This function starts an election by deploying a new PTBallot contract\\n     * @dev each parameter goes into the constructor of the PTBallot contract to deploy\\n     * @param candidateNames names of candidates\\n     * @param candidateParties names of parties\\n     * @param myAddress address set as the owner of the ballot\\n     * @param amountOfDays number of days ballot is open (limited from 0-255)\\n     */\\n    function startElec (bytes32[] memory candidateNames, bytes32[] memory candidateParties, address myAddress, uint8 amountOfDays) public returns(uint256)  {\\n            newBallot = new PTBallot (candidateNames, candidateParties, myAddress, amountOfDays);\\n            deployedBallots.push(address(newBallot));\\n            ballotId += 1;\\n            idToBallot[ballotId] = address(newBallot);\\n            return ballotId;\\n        }\\n \\n//@dev function to get all of the Ballots that have been deployed\\n//@return deployedBallots list of all contract addresses of deployed Ballots\\n    function getsDeployedBallots() public view returns( address[] memory)\\n    {return deployedBallots;}\\n}\\n\",\"keccak256\":\"0x59f8ab41c214ca76b10453ead0b0f718c0eb924a5b578094dbae64025a529f03\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 20,
                "contract": "contracts/YourContract.sol:PTBallot",
                "label": "chairperson",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 22,
                "contract": "contracts/YourContract.sol:PTBallot",
                "label": "expirationDate",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 27,
                "contract": "contracts/YourContract.sol:PTBallot",
                "label": "voters",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_struct(Voter)11_storage)"
              },
              {
                "astId": 31,
                "contract": "contracts/YourContract.sol:PTBallot",
                "label": "candidates",
                "offset": 0,
                "slot": "3",
                "type": "t_array(t_struct(Candidate)18_storage)dyn_storage"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(Candidate)18_storage)dyn_storage": {
                "base": "t_struct(Candidate)18_storage",
                "encoding": "dynamic_array",
                "label": "struct PTBallot.Candidate[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_mapping(t_address,t_struct(Voter)11_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct PTBallot.Voter)",
                "numberOfBytes": "32",
                "value": "t_struct(Voter)11_storage"
              },
              "t_struct(Candidate)18_storage": {
                "encoding": "inplace",
                "label": "struct PTBallot.Candidate",
                "members": [
                  {
                    "astId": 13,
                    "contract": "contracts/YourContract.sol:PTBallot",
                    "label": "name",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bytes32"
                  },
                  {
                    "astId": 15,
                    "contract": "contracts/YourContract.sol:PTBallot",
                    "label": "party",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_bytes32"
                  },
                  {
                    "astId": 17,
                    "contract": "contracts/YourContract.sol:PTBallot",
                    "label": "voteCount",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_struct(Voter)11_storage": {
                "encoding": "inplace",
                "label": "struct PTBallot.Voter",
                "members": [
                  {
                    "astId": 4,
                    "contract": "contracts/YourContract.sol:PTBallot",
                    "label": "weight",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 6,
                    "contract": "contracts/YourContract.sol:PTBallot",
                    "label": "voted",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_bool"
                  },
                  {
                    "astId": 8,
                    "contract": "contracts/YourContract.sol:PTBallot",
                    "label": "delegate",
                    "offset": 1,
                    "slot": "1",
                    "type": "t_address"
                  },
                  {
                    "astId": 10,
                    "contract": "contracts/YourContract.sol:PTBallot",
                    "label": "vote",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "YourContract": {
          "abi": [
            {
              "inputs": [],
              "name": "ballotId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "deployedBallots",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getsDeployedBallots",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "idToBallot",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "newBallot",
              "outputs": [
                {
                  "internalType": "contract PTBallot",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "candidateNames",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "candidateParties",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "address",
                  "name": "myAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "amountOfDays",
                  "type": "uint8"
                }
              ],
              "name": "startElec",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Bella Kaneza",
            "details": "Functions are designed to limit gas cost and deploy a Ballot with maximum visibility and minimal issue",
            "kind": "dev",
            "methods": {
              "startElec(bytes32[],bytes32[],address,uint8)": {
                "details": "each parameter goes into the constructor of the PTBallot contract to deploy",
                "params": {
                  "amountOfDays": "number of days ballot is open (limited from 0-255)",
                  "candidateNames": "names of candidates",
                  "candidateParties": "names of parties",
                  "myAddress": "address set as the owner of the ballot"
                }
              }
            },
            "title": "YourContract",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061107e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630b318ac6146100675780630e3e4a751461009757806380207a5c146100ac578063cdf74c3e146100cd578063cf00619e146100e0578063db4dff3814610109575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f610112565b60405161008e9190610419565b6100bf6100ba366004610331565b610174565b60405190815260200161008e565b61007a6100db3660046103c7565b61025c565b61007a6100ee3660046103c7565b6002602052600090815260409020546001600160a01b031681565b6100bf60035481565b6060600180548060200260200160405190810160405280929190818152602001828054801561016a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161014c575b5050505050905090565b60008484848460405161018690610286565b6101939493929190610466565b604051809103906000f0801580156101af573d6000803e3d6000fd5b50600080546001600160a01b03929092166001600160a01b0319928316811782556001805480820182558184527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180549094169091179092556003805490919061021b9084906104b0565b9091555050600080546003805483526002602052604090922080546001600160a01b0319166001600160a01b03909216919091179055549050949350505050565b6001818154811061026c57600080fd5b6000918252602090912001546001600160a01b0316905081565b610b5e806104eb83390190565b600082601f8301126102a3578081fd5b8135602067ffffffffffffffff808311156102c0576102c06104d4565b8260051b604051601f19603f830116810181811084821117156102e5576102e56104d4565b60405284815283810192508684018288018501891015610303578687fd5b8692505b85831015610325578035845292840192600192909201918401610307565b50979650505050505050565b60008060008060808587031215610346578384fd5b843567ffffffffffffffff8082111561035d578586fd5b61036988838901610293565b9550602087013591508082111561037e578485fd5b5061038b87828801610293565b93505060408501356001600160a01b03811681146103a7578283fd5b9150606085013560ff811681146103bc578182fd5b939692955090935050565b6000602082840312156103d8578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561040e578151875295820195908201906001016103f2565b509495945050505050565b6020808252825182820181905260009190848201906040850190845b8181101561045a5783516001600160a01b031683529284019291840191600101610435565b50909695505050505050565b60808152600061047960808301876103df565b828103602084015261048b81876103df565b6001600160a01b03959095166040840152505060ff9190911660609091015292915050565b600082198211156104cf57634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfe60806040523480156200001157600080fd5b5060405162000b5e38038062000b5e833981016040819052620000349162000218565b82518451146200004357600080fd5b60ff81166200005157600080fd5b600080546001600160a01b0319166001600160a01b03841690811782558152600260205260409020600190556200008f60ff821662015180620002d4565b620000a09062ffffff1642620002b9565b60015560005b8451811015620001665760036040518060600160405280878481518110620000de57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020018684815181106200010c57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825260009181018290528354600181810186559483529181902083516003909302019182558201519281019290925560400151600290910155806200015d8162000302565b915050620000a6565b50505050506200034c565b600082601f83011262000182578081fd5b815160206001600160401b0380831115620001a157620001a162000336565b8260051b604051601f19603f83011681018181108482111715620001c957620001c962000336565b60405284815283810192508684018288018501891015620001e8578687fd5b8692505b858310156200020c578051845292840192600192909201918401620001ec565b50979650505050505050565b600080600080608085870312156200022e578384fd5b84516001600160401b038082111562000245578586fd5b620002538883890162000171565b9550602087015191508082111562000269578485fd5b50620002788782880162000171565b604087015190945090506001600160a01b038116811462000297578283fd5b606086015190925060ff81168114620002ae578182fd5b939692955090935050565b60008219821115620002cf57620002cf62000320565b500190565b600062ffffff80831681851681830481118215151615620002f957620002f962000320565b02949350505050565b600060001982141562000319576200031962000320565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610802806200035c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638733902011610066578063873390201461011e5780638f620487146101345780639e7b8d611461013d578063d28178d714610150578063ed8bddeb1461015857600080fd5b80630121b93f146100985780632e4176cf146100ad5780633477ee2e146100dd5780635c19a95c1461010b575b600080fd5b6100ab6100a6366004610754565b610175565b005b6000546100c0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f06100eb366004610754565b610286565b604080519384526020840192909252908201526060016100d4565b6100ab610119366004610726565b6102b9565b6101266104d4565b6040519081526020016100d4565b61012660015481565b6100ab61014b366004610726565b6104e9565b61012661060e565b6101606106a7565b604080519283526020830191909152016100d4565b600154421061018357600080fd5b33600090815260026020526040902080546101dc5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102225760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101d3565b6001818101805460ff19169091179055600281018290558054600380548490811061025d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201600082825461027d919061076c565b90915550505050565b6003818154811061029657600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60015442106102c757600080fd5b336000908152600260205260409020600181015460ff16156103205760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b60448201526064016101d3565b6001600160a01b0382163314156103795760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e000060448201526064016101d3565b6001600160a01b038281166000908152600260205260409020600101546101009004161561041c576001600160a01b03918216600090815260026020526040902060010154610100900490911690338214156104175760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e0000000000000060448201526064016101d3565b610379565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526002602052604090209081015460ff16156104b5578160000154600382600201548154811061048a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160008282546104aa919061076c565b909155506104cf9050565b8154815482906000906104c990849061076c565b90915550505b505050565b6000426001546104e49190610784565b905090565b60015442106104f757600080fd5b6000546001600160a01b031633146105625760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b60648201526084016101d3565b6001600160a01b03811660009081526002602052604090206001015460ff16156105ce5760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101d3565b6001600160a01b038116600090815260026020526040902054156105f157600080fd5b6001600160a01b0316600090815260026020526040902060019055565b600080805b6003548110156106a257816003828154811061063f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201541115610690576003818154811061067857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016002015491508092505b8061069a8161079b565b915050610613565b505090565b60008060036106b461060e565b815481106106d257634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154915060036106f061060e565b8154811061070e57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015490509091565b600060208284031215610737578081fd5b81356001600160a01b038116811461074d578182fd5b9392505050565b600060208284031215610765578081fd5b5035919050565b6000821982111561077f5761077f6107b6565b500190565b600082821015610796576107966107b6565b500390565b60006000198214156107af576107af6107b6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122017325b6f2ab3429d0be66068daf38fbcdb306cef2f81eb9e28766e1c778f1ee464736f6c63430008040033a26469706673582212207f2619b629e959157fd625c4fea4e5c9c92b39c6db47998f9bb1c5023262be3064736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB318AC6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xE3E4A75 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x80207A5C EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xCDF74C3E EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xCF00619E EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xDB4DFF38 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x419 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x174 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x7A PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBF PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x186 SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH2 0x193 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE DUP2 DUP5 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x21B SWAP1 DUP5 SWAP1 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB5E DUP1 PUSH2 0x4EB DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2C0 PUSH2 0x4D4 JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x303 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x325 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x307 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x346 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x35D JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x369 DUP9 DUP4 DUP10 ADD PUSH2 0x293 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI DUP5 DUP6 REVERT JUMPDEST POP PUSH2 0x38B DUP8 DUP3 DUP9 ADD PUSH2 0x293 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A7 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3BC JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40E JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3F2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x435 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x479 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3DF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x48B DUP2 DUP8 PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB5E CODESIZE SUB DUP1 PUSH3 0xB5E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x218 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH3 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND PUSH3 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE PUSH3 0x8F PUSH1 0xFF DUP3 AND PUSH3 0x15180 PUSH3 0x2D4 JUMP JUMPDEST PUSH3 0xA0 SWAP1 PUSH3 0xFFFFFF AND TIMESTAMP PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x166 JUMPI PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0xDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x10C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x3 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH3 0x15D DUP2 PUSH3 0x302 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x34C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x182 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT ISZERO PUSH3 0x1A1 JUMPI PUSH3 0x1A1 PUSH3 0x336 JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C9 PUSH3 0x336 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH3 0x1E8 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH3 0x20C JUMPI DUP1 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH3 0x1EC JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x22E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x245 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH3 0x253 DUP9 DUP4 DUP10 ADD PUSH3 0x171 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x269 JUMPI DUP5 DUP6 REVERT JUMPDEST POP PUSH3 0x278 DUP8 DUP3 DUP9 ADD PUSH3 0x171 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x297 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x2AE JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2CF JUMPI PUSH3 0x2CF PUSH3 0x320 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F9 PUSH3 0x320 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x319 JUMPI PUSH3 0x319 PUSH3 0x320 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x802 DUP1 PUSH3 0x35C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87339020 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x87339020 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8F620487 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xD28178D7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xED8BDDEB EQ PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x126 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x160 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x25D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x41C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B5 JUMPI DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x3 DUP3 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CF SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C9 SWAP1 DUP5 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x1 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6A2 JUMPI DUP2 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x63F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x690 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x69A DUP2 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x613 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH2 0x6B4 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x3 PUSH2 0x6F0 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x737 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x765 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x7B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x7B6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7AF JUMPI PUSH2 0x7AF PUSH2 0x7B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ORIGIN JUMPDEST PUSH16 0x2AB3429D0BE66068DAF38FBCDB306CEF 0x2F DUP2 0xEB SWAP15 0x28 PUSH23 0x6E1C778F1EE464736F6C63430008040033A26469706673 PC 0x22 SLT KECCAK256 PUSH32 0x2619B629E959157FD625C4FEA4E5C9C92B39C6DB47998F9BB1C5023262BE3064 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "6204:1286:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4869:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "78:869:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "127:24:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "136:5:1"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "143:5:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "129:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "129:20:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "129:20:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "106:6:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "114:4:1",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "102:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "102:17:1"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "121:3:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "98:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "98:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "91:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "91:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "88:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "160:30:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "183:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "170:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "170:20:1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "164:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "199:14:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "209:4:1",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "203:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "222:28:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "232:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "226:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "273:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "275:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "275:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "275:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "265:2:1"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "269:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "262:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "262:10:1"
                              },
                              "nodeType": "YulIf",
                              "src": "259:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "304:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "318:1:1",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "321:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "314:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "314:10:1"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "308:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "333:23:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "353:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "347:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "347:9:1"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "337:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "365:56:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "387:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "403:2:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "407:2:1",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "399:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "399:11:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "416:2:1",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "412:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "412:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "395:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "395:25:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "383:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "383:38:1"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "369:10:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "480:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "482:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "482:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "482:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "439:10:1"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "451:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "436:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "436:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "459:10:1"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "471:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "456:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "456:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "433:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "433:46:1"
                              },
                              "nodeType": "YulIf",
                              "src": "430:2:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "518:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:10:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "511:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "511:22:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "511:22:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "542:17:1",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:1"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "546:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "575:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "583:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "568:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "568:18:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "568:18:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "595:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "606:6:1"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "614:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "602:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "602:15:1"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "626:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "641:6:1"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "649:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "637:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "637:15:1"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "630:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "698:24:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "707:5:1"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "714:5:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "700:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "700:20:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "700:20:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "675:6:1"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "683:2:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "671:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "671:15:1"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "688:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "667:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "667:24:1"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "693:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "664:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "664:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "661:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "731:14:1",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "740:5:1"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "735:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "799:118:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "820:3:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "838:3:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "825:12:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "825:17:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "813:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "813:30:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "813:30:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "856:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "867:3:1"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "872:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "863:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "863:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "856:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "888:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "899:3:1"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "904:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "895:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "895:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "888:3:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "765:1:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "768:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "762:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "762:9:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "772:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "774:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "783:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "786:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "779:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "779:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "774:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "758:3:1",
                                "statements": []
                              },
                              "src": "754:163:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "926:15:1",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "935:6:1"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "926:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_bytes32_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "52:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "60:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "68:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14:933:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1121:816:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1168:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1177:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1185:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1170:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1170:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1170:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1142:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1151:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1138:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1138:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1163:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1134:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1134:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1131:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1203:37:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1230:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1217:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1217:23:1"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1207:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1249:28:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1259:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1253:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1304:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1313:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1321:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1306:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1306:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1306:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1292:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1300:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1289:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1289:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1286:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1339:71:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1382:9:1"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1393:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1378:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1378:22:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1402:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_bytes32_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "1349:28:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1349:61:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1339:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1419:48:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1452:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1463:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1448:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1448:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1435:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1435:32:1"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1423:8:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1496:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1505:6:1"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1513:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1498:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1498:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1498:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1482:8:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1492:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1479:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1479:16:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1476:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1531:73:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1574:9:1"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1585:8:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1570:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1570:24:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1596:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_bytes32_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "1541:28:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1541:63:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1531:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1613:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1643:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1654:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1639:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1639:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1626:32:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1617:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1721:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1730:6:1"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1738:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1723:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1723:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1723:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1680:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1691:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1706:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1711:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1702:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1702:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1715:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "1698:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1698:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1687:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1687:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1677:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1677:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1670:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1670:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1667:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1756:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1766:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1756:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1780:47:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1812:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1823:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1808:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1808:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1795:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1795:32:1"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1784:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1879:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1888:6:1"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1896:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1881:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1881:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1881:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1849:7:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1862:7:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1871:4:1",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1858:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1858:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1846:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1846:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1839:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1839:39:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1836:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1914:17:1",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1924:7:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1914:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1063:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1074:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1086:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1094:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1102:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1110:6:1",
                            "type": ""
                          }
                        ],
                        "src": "952:985:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2012:120:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2058:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2067:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2075:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2060:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2060:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2060:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2033:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2042:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2029:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2029:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2054:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2025:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2025:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2022:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2093:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2116:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2103:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2103:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2093:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1978:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1989:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2001:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1942:190:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2198:376:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2208:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2228:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2222:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2222:12:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2212:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2250:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2255:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2243:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2243:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2243:19:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2271:14:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2281:4:1",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2275:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2294:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2305:3:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2310:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2301:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2301:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2294:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2322:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2340:5:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2347:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2336:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2336:14:1"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "2326:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2359:12:1",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "2368:3:1"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2363:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2429:120:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "2450:3:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "2461:6:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2455:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2455:13:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2443:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2443:26:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2443:26:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2482:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "2493:3:1"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2498:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2489:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2489:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2482:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2514:25:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2528:6:1"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2536:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2524:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2524:15:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2514:6:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2391:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2394:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2388:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2388:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2402:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2404:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2413:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2416:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2409:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2409:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2404:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2384:3:1",
                                "statements": []
                              },
                              "src": "2380:169:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2558:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2565:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2558:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_bytes32_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2175:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2182:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2190:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2137:437:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2680:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2690:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2702:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2713:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2698:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2698:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2690:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2732:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2747:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2763:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2768:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2759:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2759:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2772:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2755:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2755:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2743:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2743:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2725:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2725:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2725:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2649:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2660:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2671:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2579:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2938:510:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2948:12:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2958:2:1",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2952:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2969:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2987:9:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2998:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2983:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2983:18:1"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2973:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3017:9:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3028:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3010:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3010:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3010:21:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3040:17:1",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "3051:6:1"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "3044:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3066:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3086:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3080:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3080:13:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3070:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3109:6:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3117:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3102:22:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3102:22:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3133:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3144:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3155:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3140:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3140:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3133:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3167:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3185:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3193:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3181:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3181:15:1"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3171:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3205:13:1",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "3214:4:1"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "3209:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3276:146:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "3297:3:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3312:6:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "3306:5:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3306:13:1"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3329:3:1",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3334:1:1",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3325:3:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3325:11:1"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3338:1:1",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "3321:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3321:19:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "3302:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3302:39:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3290:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3290:52:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3290:52:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3355:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "3366:3:1"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3371:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3362:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3362:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3355:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3387:25:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3401:6:1"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3409:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3397:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3397:15:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3387:6:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3238:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3241:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3235:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3235:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3249:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3251:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3260:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3263:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3256:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3256:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3251:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3231:3:1",
                                "statements": []
                              },
                              "src": "3227:195:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3431:11:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3439:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3431:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2907:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2918:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2929:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2787:661:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3734:361:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3751:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3762:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3744:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3744:22:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3744:22:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3775:71:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3818:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3830:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3841:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3826:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3826:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_bytes32_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "3789:28:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3789:57:1"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3779:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3866:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3877:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3862:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3862:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3886:6:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3894:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3882:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3882:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3855:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3855:50:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3855:50:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3914:52:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3951:6:1"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3959:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_bytes32_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "3922:28:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3922:44:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3914:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3986:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3997:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3982:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3982:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "4006:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4022:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4027:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4018:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4018:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4031:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4014:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4014:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4002:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4002:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3975:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3975:60:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3975:60:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4055:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4066:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4051:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4051:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value3",
                                        "nodeType": "YulIdentifier",
                                        "src": "4075:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4083:4:1",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4071:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4071:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4044:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4044:45:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4044:45:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_address_t_uint8__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_address_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3679:9:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3690:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3698:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3706:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3714:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3725:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3453:642:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4217:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4227:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4239:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4250:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4235:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4235:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4227:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4269:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4284:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4300:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4305:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4296:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4296:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4309:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4292:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4292:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4280:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4280:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4262:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4262:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4262:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_PTBallot_$394__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4186:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4197:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4208:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4100:219:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4425:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4435:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4447:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4458:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4443:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4443:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4435:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4477:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4488:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4470:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4470:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4470:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4394:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4405:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4416:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4324:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4554:181:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4589:115:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "sum",
                                          "nodeType": "YulIdentifier",
                                          "src": "4610:3:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4619:3:1",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4624:10:1",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "4615:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4615:20:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4603:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4603:33:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4603:33:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4656:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4659:4:1",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4649:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4649:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4649:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "sum",
                                          "nodeType": "YulIdentifier",
                                          "src": "4684:3:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4689:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4677:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4677:17:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4677:17:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4570:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "4577:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4573:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4573:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4567:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4567:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4564:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4713:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4724:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4727:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4720:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4720:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "4713:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4537:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4540:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "4546:3:1",
                            "type": ""
                          }
                        ],
                        "src": "4506:229:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4772:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4789:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4796:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4801:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4792:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4792:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4782:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4782:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4782:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4829:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4832:4:1",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4822:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4822:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4822:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4853:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4856:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4846:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4846:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4846:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4740:127:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint8(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_array_bytes32_dyn(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value2, value2) }\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(value3, value3) }\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_bytes32_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_address_t_uint8__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_address_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_bytes32_dyn(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_bytes32_dyn(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_PTBallot_$394__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80630b318ac6146100675780630e3e4a751461009757806380207a5c146100ac578063cdf74c3e146100cd578063cf00619e146100e0578063db4dff3814610109575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f610112565b60405161008e9190610419565b6100bf6100ba366004610331565b610174565b60405190815260200161008e565b61007a6100db3660046103c7565b61025c565b61007a6100ee3660046103c7565b6002602052600090815260409020546001600160a01b031681565b6100bf60035481565b6060600180548060200260200160405190810160405280929190818152602001828054801561016a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161014c575b5050505050905090565b60008484848460405161018690610286565b6101939493929190610466565b604051809103906000f0801580156101af573d6000803e3d6000fd5b50600080546001600160a01b03929092166001600160a01b0319928316811782556001805480820182558184527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180549094169091179092556003805490919061021b9084906104b0565b9091555050600080546003805483526002602052604090922080546001600160a01b0319166001600160a01b03909216919091179055549050949350505050565b6001818154811061026c57600080fd5b6000918252602090912001546001600160a01b0316905081565b610b5e806104eb83390190565b600082601f8301126102a3578081fd5b8135602067ffffffffffffffff808311156102c0576102c06104d4565b8260051b604051601f19603f830116810181811084821117156102e5576102e56104d4565b60405284815283810192508684018288018501891015610303578687fd5b8692505b85831015610325578035845292840192600192909201918401610307565b50979650505050505050565b60008060008060808587031215610346578384fd5b843567ffffffffffffffff8082111561035d578586fd5b61036988838901610293565b9550602087013591508082111561037e578485fd5b5061038b87828801610293565b93505060408501356001600160a01b03811681146103a7578283fd5b9150606085013560ff811681146103bc578182fd5b939692955090935050565b6000602082840312156103d8578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561040e578151875295820195908201906001016103f2565b509495945050505050565b6020808252825182820181905260009190848201906040850190845b8181101561045a5783516001600160a01b031683529284019291840191600101610435565b50909695505050505050565b60808152600061047960808301876103df565b828103602084015261048b81876103df565b6001600160a01b03959095166040840152505060ff9190911660609091015292915050565b600082198211156104cf57634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfe60806040523480156200001157600080fd5b5060405162000b5e38038062000b5e833981016040819052620000349162000218565b82518451146200004357600080fd5b60ff81166200005157600080fd5b600080546001600160a01b0319166001600160a01b03841690811782558152600260205260409020600190556200008f60ff821662015180620002d4565b620000a09062ffffff1642620002b9565b60015560005b8451811015620001665760036040518060600160405280878481518110620000de57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020018684815181106200010c57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825260009181018290528354600181810186559483529181902083516003909302019182558201519281019290925560400151600290910155806200015d8162000302565b915050620000a6565b50505050506200034c565b600082601f83011262000182578081fd5b815160206001600160401b0380831115620001a157620001a162000336565b8260051b604051601f19603f83011681018181108482111715620001c957620001c962000336565b60405284815283810192508684018288018501891015620001e8578687fd5b8692505b858310156200020c578051845292840192600192909201918401620001ec565b50979650505050505050565b600080600080608085870312156200022e578384fd5b84516001600160401b038082111562000245578586fd5b620002538883890162000171565b9550602087015191508082111562000269578485fd5b50620002788782880162000171565b604087015190945090506001600160a01b038116811462000297578283fd5b606086015190925060ff81168114620002ae578182fd5b939692955090935050565b60008219821115620002cf57620002cf62000320565b500190565b600062ffffff80831681851681830481118215151615620002f957620002f962000320565b02949350505050565b600060001982141562000319576200031962000320565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610802806200035c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638733902011610066578063873390201461011e5780638f620487146101345780639e7b8d611461013d578063d28178d714610150578063ed8bddeb1461015857600080fd5b80630121b93f146100985780632e4176cf146100ad5780633477ee2e146100dd5780635c19a95c1461010b575b600080fd5b6100ab6100a6366004610754565b610175565b005b6000546100c0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f06100eb366004610754565b610286565b604080519384526020840192909252908201526060016100d4565b6100ab610119366004610726565b6102b9565b6101266104d4565b6040519081526020016100d4565b61012660015481565b6100ab61014b366004610726565b6104e9565b61012661060e565b6101606106a7565b604080519283526020830191909152016100d4565b600154421061018357600080fd5b33600090815260026020526040902080546101dc5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102225760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101d3565b6001818101805460ff19169091179055600281018290558054600380548490811061025d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201600082825461027d919061076c565b90915550505050565b6003818154811061029657600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60015442106102c757600080fd5b336000908152600260205260409020600181015460ff16156103205760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b60448201526064016101d3565b6001600160a01b0382163314156103795760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e000060448201526064016101d3565b6001600160a01b038281166000908152600260205260409020600101546101009004161561041c576001600160a01b03918216600090815260026020526040902060010154610100900490911690338214156104175760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e0000000000000060448201526064016101d3565b610379565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526002602052604090209081015460ff16156104b5578160000154600382600201548154811061048a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160008282546104aa919061076c565b909155506104cf9050565b8154815482906000906104c990849061076c565b90915550505b505050565b6000426001546104e49190610784565b905090565b60015442106104f757600080fd5b6000546001600160a01b031633146105625760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b60648201526084016101d3565b6001600160a01b03811660009081526002602052604090206001015460ff16156105ce5760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101d3565b6001600160a01b038116600090815260026020526040902054156105f157600080fd5b6001600160a01b0316600090815260026020526040902060019055565b600080805b6003548110156106a257816003828154811061063f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201541115610690576003818154811061067857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016002015491508092505b8061069a8161079b565b915050610613565b505090565b60008060036106b461060e565b815481106106d257634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154915060036106f061060e565b8154811061070e57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015490509091565b600060208284031215610737578081fd5b81356001600160a01b038116811461074d578182fd5b9392505050565b600060208284031215610765578081fd5b5035919050565b6000821982111561077f5761077f6107b6565b500190565b600082821015610796576107966107b6565b500390565b60006000198214156107af576107af6107b6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122017325b6f2ab3429d0be66068daf38fbcdb306cef2f81eb9e28766e1c778f1ee464736f6c63430008040033a26469706673582212207f2619b629e959157fd625c4fea4e5c9c92b39c6db47998f9bb1c5023262be3064736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB318AC6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xE3E4A75 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x80207A5C EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xCDF74C3E EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xCF00619E EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xDB4DFF38 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x419 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x174 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x7A PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBF PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x186 SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH2 0x193 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE DUP2 DUP5 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x21B SWAP1 DUP5 SWAP1 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB5E DUP1 PUSH2 0x4EB DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2C0 PUSH2 0x4D4 JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x303 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x325 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x307 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x346 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x35D JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x369 DUP9 DUP4 DUP10 ADD PUSH2 0x293 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI DUP5 DUP6 REVERT JUMPDEST POP PUSH2 0x38B DUP8 DUP3 DUP9 ADD PUSH2 0x293 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A7 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3BC JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40E JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3F2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x435 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x479 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3DF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x48B DUP2 DUP8 PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB5E CODESIZE SUB DUP1 PUSH3 0xB5E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x218 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH3 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND PUSH3 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE PUSH3 0x8F PUSH1 0xFF DUP3 AND PUSH3 0x15180 PUSH3 0x2D4 JUMP JUMPDEST PUSH3 0xA0 SWAP1 PUSH3 0xFFFFFF AND TIMESTAMP PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x166 JUMPI PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0xDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x10C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x3 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH3 0x15D DUP2 PUSH3 0x302 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x34C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x182 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT ISZERO PUSH3 0x1A1 JUMPI PUSH3 0x1A1 PUSH3 0x336 JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C9 PUSH3 0x336 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH3 0x1E8 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH3 0x20C JUMPI DUP1 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH3 0x1EC JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x22E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x245 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH3 0x253 DUP9 DUP4 DUP10 ADD PUSH3 0x171 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x269 JUMPI DUP5 DUP6 REVERT JUMPDEST POP PUSH3 0x278 DUP8 DUP3 DUP9 ADD PUSH3 0x171 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x297 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x2AE JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2CF JUMPI PUSH3 0x2CF PUSH3 0x320 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F9 PUSH3 0x320 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x319 JUMPI PUSH3 0x319 PUSH3 0x320 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x802 DUP1 PUSH3 0x35C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87339020 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x87339020 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8F620487 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xD28178D7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xED8BDDEB EQ PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x126 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x160 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x25D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x41C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B5 JUMPI DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x3 DUP3 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CF SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C9 SWAP1 DUP5 SWAP1 PUSH2 0x76C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x1 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6A2 JUMPI DUP2 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x63F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x690 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x69A DUP2 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x613 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH2 0x6B4 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x3 PUSH2 0x6F0 PUSH2 0x60E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x737 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x765 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x7B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x7B6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7AF JUMPI PUSH2 0x7AF PUSH2 0x7B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ORIGIN JUMPDEST PUSH16 0x2AB3429D0BE66068DAF38FBCDB306CEF 0x2F DUP2 0xEB SWAP15 0x28 PUSH23 0x6E1C778F1EE464736F6C63430008040033A26469706673 PC 0x22 SLT KECCAK256 PUSH32 0x2619B629E959157FD625C4FEA4E5C9C92B39C6DB47998F9BB1C5023262BE3064 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "6204:1286:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6232:25;;;;;-1:-1:-1;;;;;6232:25:0;;;;;;-1:-1:-1;;;;;2743:32:1;;;2725:51;;2713:2;2698:18;6232:25:0;;;;;;;;7389:99;;;:::i;:::-;;;;;;;:::i;6813:426::-;;;;;;:::i;:::-;;:::i;:::-;;;4470:25:1;;;4458:2;4443:18;6813:426:0;4425:76:1;6263:32:0;;;;;;:::i;:::-;;:::i;6301:45::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6301:45:0;;;6352:23;;;;;;7389:99;7441:16;7471:15;7464:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7464:22:0;;;;;;;;;;;;;;;;;;;;;;;7389:99;:::o;6813:426::-;6955:7;7005:14;7021:16;7039:9;7050:12;6991:72;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6979:9:0;:84;;-1:-1:-1;;;;;6979:84:0;;;;-1:-1:-1;;;;;;6979:84:0;;;;;;;;7077:40;;;;;;;;;;;;;;;;;;;;;;;7131:8;:13;;:8;;6979:9;7131:13;;6979:84;;7131:13;:::i;:::-;;;;-1:-1:-1;;7189:9:0;;;7169:8;;;7158:20;;:10;:20;;;;;;:41;;-1:-1:-1;;;;;;7158:41:0;-1:-1:-1;;;;;7189:9:0;;;7158:41;;;;;;7220:8;;-1:-1:-1;6813:426:0;;;;;;:::o;6263:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6263:32:0;;-1:-1:-1;6263:32:0;:::o;-1:-1:-1:-;;;;;;;;:::o;14:933:1:-;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;183:6;170:20;209:4;232:18;269:2;265;262:10;259:2;;;275:18;;:::i;:::-;321:2;318:1;314:10;353:2;347:9;416:2;412:7;407:2;403;399:11;395:25;387:6;383:38;471:6;459:10;456:22;451:2;439:10;436:18;433:46;430:2;;;482:18;;:::i;:::-;518:2;511:22;568:18;;;602:15;;;;-1:-1:-1;637:15:1;;;671;;;667:24;;664:33;-1:-1:-1;661:2:1;;;714:5;707;700:20;661:2;740:5;731:14;;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;786:1;779:9;;;;;895:12;;754:163;;;-1:-1:-1;935:6:1;78:869;-1:-1:-1;;;;;;;78:869:1:o;952:985::-;1086:6;1094;1102;1110;1163:3;1151:9;1142:7;1138:23;1134:33;1131:2;;;1185:6;1177;1170:22;1131:2;1230:9;1217:23;1259:18;1300:2;1292:6;1289:14;1286:2;;;1321:6;1313;1306:22;1286:2;1349:61;1402:7;1393:6;1382:9;1378:22;1349:61;:::i;:::-;1339:71;;1463:2;1452:9;1448:18;1435:32;1419:48;;1492:2;1482:8;1479:16;1476:2;;;1513:6;1505;1498:22;1476:2;;1541:63;1596:7;1585:8;1574:9;1570:24;1541:63;:::i;:::-;1531:73;-1:-1:-1;;1654:2:1;1639:18;;1626:32;-1:-1:-1;;;;;1687:31:1;;1677:42;;1667:2;;1738:6;1730;1723:22;1667:2;1766:5;-1:-1:-1;1823:2:1;1808:18;;1795:32;1871:4;1858:18;;1846:31;;1836:2;;1896:6;1888;1881:22;1836:2;1121:816;;;;-1:-1:-1;1121:816:1;;-1:-1:-1;;1121:816:1:o;1942:190::-;2001:6;2054:2;2042:9;2033:7;2029:23;2025:32;2022:2;;;2075:6;2067;2060:22;2022:2;-1:-1:-1;2103:23:1;;2012:120;-1:-1:-1;2012:120:1:o;2137:437::-;2190:3;2228:5;2222:12;2255:6;2250:3;2243:19;2281:4;2310:2;2305:3;2301:12;2294:19;;2347:2;2340:5;2336:14;2368:3;2380:169;2394:6;2391:1;2388:13;2380:169;;;2455:13;;2443:26;;2489:12;;;;2524:15;;;;2416:1;2409:9;2380:169;;;-1:-1:-1;2565:3:1;;2198:376;-1:-1:-1;;;;;2198:376:1:o;2787:661::-;2958:2;3010:21;;;3080:13;;2983:18;;;3102:22;;;2929:4;;2958:2;3181:15;;;;3155:2;3140:18;;;2929:4;3227:195;3241:6;3238:1;3235:13;3227:195;;;3306:13;;-1:-1:-1;;;;;3302:39:1;3290:52;;3397:15;;;;3362:12;;;;3338:1;3256:9;3227:195;;;-1:-1:-1;3439:3:1;;2938:510;-1:-1:-1;;;;;;2938:510:1:o;3453:642::-;3762:3;3751:9;3744:22;3725:4;3789:57;3841:3;3830:9;3826:19;3818:6;3789:57;:::i;:::-;3894:9;3886:6;3882:22;3877:2;3866:9;3862:18;3855:50;3922:44;3959:6;3951;3922:44;:::i;:::-;-1:-1:-1;;;;;4002:32:1;;;;3997:2;3982:18;;3975:60;-1:-1:-1;;4083:4:1;4071:17;;;;4066:2;4051:18;;;4044:45;3914:52;3734:361;-1:-1:-1;;3734:361:1:o;4506:229::-;4546:3;4577:1;4573:6;4570:1;4567:13;4564:2;;;-1:-1:-1;;;4603:33:1;;4659:4;4656:1;4649:15;4689:4;4610:3;4677:17;4564:2;-1:-1:-1;4720:9:1;;4554:181::o;4740:127::-;4801:10;4796:3;4792:20;4789:1;4782:31;4832:4;4829:1;4822:15;4856:4;4853:1;4846:15"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "844400",
                "executionCost": "877",
                "totalCost": "845277"
              },
              "external": {
                "ballotId()": "1083",
                "deployedBallots(uint256)": "2047",
                "getsDeployedBallots()": "infinite",
                "idToBallot(uint256)": "1232",
                "newBallot()": "1004",
                "startElec(bytes32[],bytes32[],address,uint8)": "infinite"
              }
            },
            "methodIdentifiers": {
              "ballotId()": "db4dff38",
              "deployedBallots(uint256)": "cdf74c3e",
              "getsDeployedBallots()": "0e3e4a75",
              "idToBallot(uint256)": "cf00619e",
              "newBallot()": "0b318ac6",
              "startElec(bytes32[],bytes32[],address,uint8)": "80207a5c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ballotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployedBallots\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getsDeployedBallots\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToBallot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newBallot\",\"outputs\":[{\"internalType\":\"contract PTBallot\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"candidateNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"candidateParties\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"myAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"amountOfDays\",\"type\":\"uint8\"}],\"name\":\"startElec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Bella Kaneza\",\"details\":\"Functions are designed to limit gas cost and deploy a Ballot with maximum visibility and minimal issue\",\"kind\":\"dev\",\"methods\":{\"startElec(bytes32[],bytes32[],address,uint8)\":{\"details\":\"each parameter goes into the constructor of the PTBallot contract to deploy\",\"params\":{\"amountOfDays\":\"number of days ballot is open (limited from 0-255)\",\"candidateNames\":\"names of candidates\",\"candidateParties\":\"names of parties\",\"myAddress\":\"address set as the owner of the ballot\"}}},\"title\":\"YourContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"startElec(bytes32[],bytes32[],address,uint8)\":{\"notice\":\"This function starts an election by deploying a new PTBallot contract\"}},\"notice\":\"You can use this control contract to create and view Ballots using the PTBallot contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"YourContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YourContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n\\n/** \\n * @title PTBallot\\n * @dev Implements publically viewable party designation and time limitation to the standard delegate voting contract\\n */\\n\\ncontract PTBallot {\\n   \\n    struct Voter {\\n        uint weight; // weight is accumulated by delegation\\n        bool voted;  // if true, that person already voted\\n        address delegate; // person delegated to\\n        uint vote;   // index of the voted candidate\\n    }\\n\\n    struct Candidate {\\n        // If you can limit the length to a certain number of bytes, \\n        // always use one of bytes1 to bytes32 because they are much cheaper\\n        bytes32 name;   // short name (up to 32 bytes)\\n        bytes32 party; // party name (up to 32 bytes)\\n        uint voteCount; // number of accumulated votes\\n    }\\n\\n    address public chairperson;\\n\\n    uint public expirationDate;\\n\\n    mapping(address => Voter) private voters;\\n\\n    Candidate[] public candidates;\\n\\n    /** \\n     * @dev Create a new ballot to choose one of 'candidateNames'.\\n     * @dev Limits amountOfDays to uint8 (0-255) to limit the max ballot timelength.\\n     * @param candidateNames names of candidates\\n     * @param candidateParties names of parties\\n     * @param amountOfDays number of days ballot is open\\n    \\n     */\\n    constructor(bytes32[] memory candidateNames, bytes32[] memory candidateParties, address chairAddress, uint8 amountOfDays) {\\n        require(candidateNames.length == candidateParties.length);\\n        require(amountOfDays != 0);\\n        chairperson = chairAddress;\\n        voters[chairperson].weight = 1;\\n\\n        expirationDate = block.timestamp + (amountOfDays * 1 days);\\n\\n        for (uint i = 0; i < candidateNames.length; i++) {\\n            // 'Candidate({...})' creates a temporary\\n            // Candidate object and 'candidates.push(...)'\\n            // appends it to the end of 'candidates'.\\n            candidates.push(Candidate({\\n                name: candidateNames[i],\\n                party: candidateParties[i],\\n                voteCount: 0\\n            }));\\n        }\\n    }\\n\\n\\n    //@dev: modifier to restrict voting functions unless the ballot is within the expirationDate;\\n    modifier isNotExpired() \\n    {\\n        require(block.timestamp < expirationDate);\\n            _;\\n    }\\n        \\n    \\n    /** \\n     * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\\n     * @param voter address of voter\\n     */\\n    function giveRightToVote(address voter) public isNotExpired {\\n        require(\\n            msg.sender == chairperson,\\n            \\\"Only chairperson can give right to vote.\\\"\\n        );\\n        require(\\n            !voters[voter].voted,\\n            \\\"The voter already voted.\\\"\\n        );\\n        require(voters[voter].weight == 0);\\n        voters[voter].weight = 1;\\n    }\\n\\n    /**\\n     * @dev Delegate your vote to the voter 'to'.\\n     * @param to address to which vote is delegated\\n     */\\n    function delegate(address to) public isNotExpired {\\n        Voter storage sender = voters[msg.sender];\\n        require(!sender.voted, \\\"You already voted.\\\");\\n        require(to != msg.sender, \\\"Self-delegation is disallowed.\\\");\\n\\n        while (voters[to].delegate != address(0)) {\\n            to = voters[to].delegate;\\n\\n            // We found a loop in the delegation, not allowed.\\n            require(to != msg.sender, \\\"Found loop in delegation.\\\");\\n        }\\n        sender.voted = true;\\n        sender.delegate = to;\\n        Voter storage delegate_ = voters[to];\\n        if (delegate_.voted) {\\n            // If the delegate already voted,\\n            // directly add to the number of votes\\n            candidates[delegate_.vote].voteCount += sender.weight;\\n        } else {\\n            // If the delegate did not vote yet,\\n            // add to her weight.\\n            delegate_.weight += sender.weight;\\n        }\\n    }\\n\\n    /**\\n     * @dev Give your vote (including votes delegated to you) to candidate 'candidates[candidate].name'.\\n     * @param candidate index of candidate in the candidates array\\n     */\\n    function vote(uint candidate) public isNotExpired {\\n        Voter storage sender = voters[msg.sender];\\n        require(sender.weight != 0, \\\"Has no right to vote\\\");\\n        require(!sender.voted, \\\"Already voted.\\\");\\n        sender.voted = true;\\n        sender.vote = candidate;\\n\\n        // If 'candidate' is out of the range of the array,\\n        // this will throw automatically and revert all\\n        // changes.\\n        candidates[candidate].voteCount += sender.weight;\\n    }\\n\\n    /** \\n     * @dev Computes the winning candidate taking all previous votes into account.\\n     * @return winningCandidate_ index of winning candidate in the candidates array\\n     */\\n    function winningCandidate() public view\\n            returns (uint winningCandidate_)\\n    {\\n        uint winningVoteCount = 0;\\n        for (uint p = 0; p < candidates.length; p++) {\\n            if (candidates[p].voteCount > winningVoteCount) {\\n                winningVoteCount = candidates[p].voteCount;\\n                winningCandidate_ = p;\\n            }\\n        }\\n    }\\n\\n    /** \\n     * @dev Calls winningCandidate() function to get the index of the winner contained in the candidates array and then\\n     * @return winnerName_ the name of the winner\\n     * @return winnerParty_ the party of the winner\\n     */\\n    function winnerDetails() public view\\n            returns (bytes32 winnerName_, bytes32 winnerParty_)\\n    {\\n        winnerName_ = candidates[winningCandidate()].name;\\n        winnerParty_ = candidates[winningCandidate()].party;\\n    }\\n    \\n\\n    /** \\n     * @dev Gets the time left for a ballot by subtracting the expiration date from the current date.\\n     * @return endDate_ the time left, in days, before the ballot expires\\n\\n     */\\n     function ballotEndDate() public view\\n            returns (uint endDate_)\\n    {\\n        endDate_ = expirationDate - block.timestamp;\\n    }\\n}\\n/** \\n * @title YourContract\\n   @author Bella Kaneza\\n   @notice You can use this control contract to create and view Ballots using the PTBallot contract\\n //@dev Functions are designed to limit gas cost and deploy a Ballot with maximum visibility and minimal issue\\n */\\n \\ncontract YourContract {\\n    PTBallot public newBallot;\\n    address[] public deployedBallots;\\n    mapping(uint256 => address) public idToBallot;\\n    uint256 public ballotId;\\n\\n        /**\\n     * @notice This function starts an election by deploying a new PTBallot contract\\n     * @dev each parameter goes into the constructor of the PTBallot contract to deploy\\n     * @param candidateNames names of candidates\\n     * @param candidateParties names of parties\\n     * @param myAddress address set as the owner of the ballot\\n     * @param amountOfDays number of days ballot is open (limited from 0-255)\\n     */\\n    function startElec (bytes32[] memory candidateNames, bytes32[] memory candidateParties, address myAddress, uint8 amountOfDays) public returns(uint256)  {\\n            newBallot = new PTBallot (candidateNames, candidateParties, myAddress, amountOfDays);\\n            deployedBallots.push(address(newBallot));\\n            ballotId += 1;\\n            idToBallot[ballotId] = address(newBallot);\\n            return ballotId;\\n        }\\n \\n//@dev function to get all of the Ballots that have been deployed\\n//@return deployedBallots list of all contract addresses of deployed Ballots\\n    function getsDeployedBallots() public view returns( address[] memory)\\n    {return deployedBallots;}\\n}\\n\",\"keccak256\":\"0x59f8ab41c214ca76b10453ead0b0f718c0eb924a5b578094dbae64025a529f03\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 398,
                "contract": "contracts/YourContract.sol:YourContract",
                "label": "newBallot",
                "offset": 0,
                "slot": "0",
                "type": "t_contract(PTBallot)394"
              },
              {
                "astId": 401,
                "contract": "contracts/YourContract.sol:YourContract",
                "label": "deployedBallots",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 405,
                "contract": "contracts/YourContract.sol:YourContract",
                "label": "idToBallot",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_uint256,t_address)"
              },
              {
                "astId": 407,
                "contract": "contracts/YourContract.sol:YourContract",
                "label": "ballotId",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_contract(PTBallot)394": {
                "encoding": "inplace",
                "label": "contract PTBallot",
                "numberOfBytes": "20"
              },
              "t_mapping(t_uint256,t_address)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "startElec(bytes32[],bytes32[],address,uint8)": {
                "notice": "This function starts an election by deploying a new PTBallot contract"
              }
            },
            "notice": "You can use this control contract to create and view Ballots using the PTBallot contract",
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/YourContract.sol": {
        "ast": {
          "absolutePath": "contracts/YourContract.sol",
          "exportedSymbols": {
            "PTBallot": [
              394
            ],
            "YourContract": [
              469
            ]
          },
          "id": 470,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0",
                "<",
                "0.9",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "67:145:0",
                "text": " @title PTBallot\n @dev Implements publically viewable party designation and time limitation to the standard delegate voting contract"
              },
              "fullyImplemented": true,
              "id": 394,
              "linearizedBaseContracts": [
                394
              ],
              "name": "PTBallot",
              "nameLocation": "223:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "PTBallot.Voter",
                  "id": 11,
                  "members": [
                    {
                      "constant": false,
                      "id": 4,
                      "mutability": "mutable",
                      "name": "weight",
                      "nameLocation": "270:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "265:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "265:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "voted",
                      "nameLocation": "330:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "325:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "325:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8,
                      "mutability": "mutable",
                      "name": "delegate",
                      "nameLocation": "392:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "384:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "384:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10,
                      "mutability": "mutable",
                      "name": "vote",
                      "nameLocation": "438:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "433:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "433:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Voter",
                  "nameLocation": "249:5:0",
                  "nodeType": "StructDefinition",
                  "scope": 394,
                  "src": "242:241:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "PTBallot.Candidate",
                  "id": 18,
                  "members": [
                    {
                      "constant": false,
                      "id": 13,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "671:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "663:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 12,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "663:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15,
                      "mutability": "mutable",
                      "name": "party",
                      "nameLocation": "726:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "718:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "718:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17,
                      "mutability": "mutable",
                      "name": "voteCount",
                      "nameLocation": "777:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "772:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "772:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Candidate",
                  "nameLocation": "496:9:0",
                  "nodeType": "StructDefinition",
                  "scope": 394,
                  "src": "489:335:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2e4176cf",
                  "id": 20,
                  "mutability": "mutable",
                  "name": "chairperson",
                  "nameLocation": "845:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "830:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8f620487",
                  "id": 22,
                  "mutability": "mutable",
                  "name": "expirationDate",
                  "nameLocation": "875:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "863:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "voters",
                  "nameLocation": "930:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "896:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                    "typeString": "mapping(address => struct PTBallot.Voter)"
                  },
                  "typeName": {
                    "id": 26,
                    "keyType": {
                      "id": 23,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "904:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "896:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                      "typeString": "mapping(address => struct PTBallot.Voter)"
                    },
                    "valueType": {
                      "id": 25,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24,
                        "name": "Voter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11,
                        "src": "915:5:0"
                      },
                      "referencedDeclaration": 11,
                      "src": "915:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                        "typeString": "struct PTBallot.Voter"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "3477ee2e",
                  "id": 31,
                  "mutability": "mutable",
                  "name": "candidates",
                  "nameLocation": "962:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "943:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                    "typeString": "struct PTBallot.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 29,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 18,
                        "src": "943:9:0"
                      },
                      "referencedDeclaration": 18,
                      "src": "943:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$18_storage_ptr",
                        "typeString": "struct PTBallot.Candidate"
                      }
                    },
                    "id": 30,
                    "nodeType": "ArrayTypeName",
                    "src": "943:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage_ptr",
                      "typeString": "struct PTBallot.Candidate[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "1429:663:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 46,
                                  "name": "candidateNames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "1447:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 47,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1447:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 48,
                                  "name": "candidateParties",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "1472:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1472:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1447:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 45,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1439:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1439:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1439:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 54,
                                "name": "amountOfDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "1514:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1530:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1514:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 53,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1506:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1506:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1506:26:0"
                      },
                      {
                        "expression": {
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59,
                            "name": "chairperson",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1542:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 60,
                            "name": "chairAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "1556:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1542:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "1542:26:0"
                      },
                      {
                        "expression": {
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 63,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "1578:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                  "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                                }
                              },
                              "id": 65,
                              "indexExpression": {
                                "id": 64,
                                "name": "chairperson",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "1585:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1578:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage",
                                "typeString": "struct PTBallot.Voter storage ref"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "1578:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1607:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1578:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "1578:30:0"
                      },
                      {
                        "expression": {
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 70,
                            "name": "expirationDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1619:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 71,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1636:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1636:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  "id": 75,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 73,
                                    "name": "amountOfDays",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42,
                                    "src": "1655:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 74,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1670:6:0",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "1655:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                }
                              ],
                              "id": 76,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1654:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            "src": "1636:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1619:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "1619:58:0"
                      },
                      {
                        "body": {
                          "id": 105,
                          "nodeType": "Block",
                          "src": "1737:349:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 95,
                                          "name": "candidateNames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35,
                                          "src": "1968:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                            "typeString": "bytes32[] memory"
                                          }
                                        },
                                        "id": 97,
                                        "indexExpression": {
                                          "id": 96,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 81,
                                          "src": "1983:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1968:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "baseExpression": {
                                          "id": 98,
                                          "name": "candidateParties",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "2010:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                            "typeString": "bytes32[] memory"
                                          }
                                        },
                                        "id": 100,
                                        "indexExpression": {
                                          "id": 99,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 81,
                                          "src": "2027:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2010:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "hexValue": "30",
                                        "id": 101,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2058:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 94,
                                      "name": "Candidate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18,
                                      "src": "1934:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_Candidate_$18_storage_ptr_$",
                                        "typeString": "type(struct PTBallot.Candidate storage pointer)"
                                      }
                                    },
                                    "id": 102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [
                                      "name",
                                      "party",
                                      "voteCount"
                                    ],
                                    "nodeType": "FunctionCall",
                                    "src": "1934:140:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$18_memory_ptr",
                                      "typeString": "struct PTBallot.Candidate memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Candidate_$18_memory_ptr",
                                      "typeString": "struct PTBallot.Candidate memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 91,
                                    "name": "candidates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "1918:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                      "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                                    }
                                  },
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "1918:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$18_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$18_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$18_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct PTBallot.Candidate storage ref[] storage pointer,struct PTBallot.Candidate storage ref)"
                                  }
                                },
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1918:157:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 104,
                              "nodeType": "ExpressionStatement",
                              "src": "1918:157:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 84,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "1705:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 85,
                              "name": "candidateNames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1709:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1709:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1705:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 106,
                        "initializationExpression": {
                          "assignments": [
                            81
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 81,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1698:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 106,
                              "src": "1693:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 80,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1693:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 83,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1702:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1693:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1732:3:0",
                            "subExpression": {
                              "id": 88,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "1732:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 90,
                          "nodeType": "ExpressionStatement",
                          "src": "1732:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1688:398:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 32,
                    "nodeType": "StructuredDocumentation",
                    "src": "979:323:0",
                    "text": " @dev Create a new ballot to choose one of 'candidateNames'.\n @dev Limits amountOfDays to uint8 (0-255) to limit the max ballot timelength.\n @param candidateNames names of candidates\n @param candidateParties names of parties\n @param amountOfDays number of days ballot is open"
                  },
                  "id": 108,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "candidateNames",
                        "nameLocation": "1336:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1319:31:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 33,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1319:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 34,
                          "nodeType": "ArrayTypeName",
                          "src": "1319:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "candidateParties",
                        "nameLocation": "1369:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1352:33:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 36,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1352:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 37,
                          "nodeType": "ArrayTypeName",
                          "src": "1352:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "chairAddress",
                        "nameLocation": "1395:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1387:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1387:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "amountOfDays",
                        "nameLocation": "1415:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1409:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1409:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1318:110:0"
                  },
                  "returnParameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1429:0:0"
                  },
                  "scope": 394,
                  "src": "1307:785:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "2226:73:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 111,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2244:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2244:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 113,
                                "name": "expirationDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "2262:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2244:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 110,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2236:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2236:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "2236:41:0"
                      },
                      {
                        "id": 117,
                        "nodeType": "PlaceholderStatement",
                        "src": "2291:1:0"
                      }
                    ]
                  },
                  "id": 119,
                  "name": "isNotExpired",
                  "nameLocation": "2206:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2218:2:0"
                  },
                  "src": "2197:102:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 160,
                    "nodeType": "Block",
                    "src": "2528:308:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2559:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2559:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 130,
                                "name": "chairperson",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "2573:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2559:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2598:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
                                "typeString": "literal_string \"Only chairperson can give right to vote.\""
                              },
                              "value": "Only chairperson can give right to vote."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
                                "typeString": "literal_string \"Only chairperson can give right to vote.\""
                              }
                            ],
                            "id": 127,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2538:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2538:112:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "2538:112:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2681:20:0",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 136,
                                    "name": "voters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "2682:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                      "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                                    }
                                  },
                                  "id": 138,
                                  "indexExpression": {
                                    "id": 137,
                                    "name": "voter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 122,
                                    "src": "2689:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2682:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$11_storage",
                                    "typeString": "struct PTBallot.Voter storage ref"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6,
                                "src": "2682:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54686520766f74657220616c726561647920766f7465642e",
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2715:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
                                "typeString": "literal_string \"The voter already voted.\""
                              },
                              "value": "The voter already voted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
                                "typeString": "literal_string \"The voter already voted.\""
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2660:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2660:91:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 143,
                        "nodeType": "ExpressionStatement",
                        "src": "2660:91:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 145,
                                    "name": "voters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "2769:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                      "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                                    }
                                  },
                                  "id": 147,
                                  "indexExpression": {
                                    "id": 146,
                                    "name": "voter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 122,
                                    "src": "2776:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2769:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$11_storage",
                                    "typeString": "struct PTBallot.Voter storage ref"
                                  }
                                },
                                "id": 148,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "weight",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4,
                                "src": "2769:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2793:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2769:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 144,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2761:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2761:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "2761:34:0"
                      },
                      {
                        "expression": {
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 153,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "2805:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                  "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                                }
                              },
                              "id": 155,
                              "indexExpression": {
                                "id": 154,
                                "name": "voter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "2812:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2805:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage",
                                "typeString": "struct PTBallot.Voter storage ref"
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "2805:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2828:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2805:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 159,
                        "nodeType": "ExpressionStatement",
                        "src": "2805:24:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 120,
                    "nodeType": "StructuredDocumentation",
                    "src": "2318:145:0",
                    "text": " @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n @param voter address of voter"
                  },
                  "functionSelector": "9e7b8d61",
                  "id": 161,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 125,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 124,
                        "name": "isNotExpired",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 119,
                        "src": "2515:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2515:12:0"
                    }
                  ],
                  "name": "giveRightToVote",
                  "nameLocation": "2477:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "voter",
                        "nameLocation": "2501:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "2493:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2493:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2492:15:0"
                  },
                  "returnParameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2528:0:0"
                  },
                  "scope": 394,
                  "src": "2468:368:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "3010:871:0",
                    "statements": [
                      {
                        "assignments": [
                          171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 171,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "3034:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "3020:20:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct PTBallot.Voter"
                            },
                            "typeName": {
                              "id": 170,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 169,
                                "name": "Voter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 11,
                                "src": "3020:5:0"
                              },
                              "referencedDeclaration": 11,
                              "src": "3020:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 176,
                        "initialValue": {
                          "baseExpression": {
                            "id": 172,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3043:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                              "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                            }
                          },
                          "id": 175,
                          "indexExpression": {
                            "expression": {
                              "id": 173,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3050:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3050:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3043:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$11_storage",
                            "typeString": "struct PTBallot.Voter storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3020:41:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3079:13:0",
                              "subExpression": {
                                "expression": {
                                  "id": 178,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 171,
                                  "src": "3080:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                    "typeString": "struct PTBallot.Voter storage pointer"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6,
                                "src": "3080:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f7520616c726561647920766f7465642e",
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3094:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
                                "typeString": "literal_string \"You already voted.\""
                              },
                              "value": "You already voted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
                                "typeString": "literal_string \"You already voted.\""
                              }
                            ],
                            "id": 177,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3071:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3071:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 183,
                        "nodeType": "ExpressionStatement",
                        "src": "3071:44:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 185,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "3133:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 186,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3139:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3139:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3133:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3151:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
                                "typeString": "literal_string \"Self-delegation is disallowed.\""
                              },
                              "value": "Self-delegation is disallowed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
                                "typeString": "literal_string \"Self-delegation is disallowed.\""
                              }
                            ],
                            "id": 184,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3125:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3125:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "3125:59:0"
                      },
                      {
                        "body": {
                          "id": 216,
                          "nodeType": "Block",
                          "src": "3237:181:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 201,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "3251:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 202,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "3256:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                        "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                                      }
                                    },
                                    "id": 204,
                                    "indexExpression": {
                                      "id": 203,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 164,
                                      "src": "3263:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3256:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$11_storage",
                                      "typeString": "struct PTBallot.Voter storage ref"
                                    }
                                  },
                                  "id": 205,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "delegate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8,
                                  "src": "3256:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3251:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 207,
                              "nodeType": "ExpressionStatement",
                              "src": "3251:24:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 212,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 209,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 164,
                                      "src": "3361:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 210,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3367:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 211,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3367:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3361:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
                                    "id": 213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3379:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
                                      "typeString": "literal_string \"Found loop in delegation.\""
                                    },
                                    "value": "Found loop in delegation."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
                                      "typeString": "literal_string \"Found loop in delegation.\""
                                    }
                                  ],
                                  "id": 208,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3353:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3353:54:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 215,
                              "nodeType": "ExpressionStatement",
                              "src": "3353:54:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 192,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "3202:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                  "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                                }
                              },
                              "id": 194,
                              "indexExpression": {
                                "id": 193,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "3209:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3202:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage",
                                "typeString": "struct PTBallot.Voter storage ref"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "3202:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3233:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3225:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 196,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3225:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3225:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3202:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 217,
                        "nodeType": "WhileStatement",
                        "src": "3195:223:0"
                      },
                      {
                        "expression": {
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 218,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "3427:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter storage pointer"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "3427:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3442:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3427:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "3427:19:0"
                      },
                      {
                        "expression": {
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 224,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "3456:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter storage pointer"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "delegate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "3456:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 227,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "3474:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3456:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 229,
                        "nodeType": "ExpressionStatement",
                        "src": "3456:20:0"
                      },
                      {
                        "assignments": [
                          232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 232,
                            "mutability": "mutable",
                            "name": "delegate_",
                            "nameLocation": "3500:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "3486:23:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct PTBallot.Voter"
                            },
                            "typeName": {
                              "id": 231,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 230,
                                "name": "Voter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 11,
                                "src": "3486:5:0"
                              },
                              "referencedDeclaration": 11,
                              "src": "3486:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 236,
                        "initialValue": {
                          "baseExpression": {
                            "id": 233,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3512:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                              "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                            }
                          },
                          "id": 235,
                          "indexExpression": {
                            "id": 234,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "3519:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3512:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$11_storage",
                            "typeString": "struct PTBallot.Voter storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3486:36:0"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 237,
                            "name": "delegate_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "3536:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct PTBallot.Voter storage pointer"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "3536:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 256,
                          "nodeType": "Block",
                          "src": "3734:141:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 249,
                                    "name": "delegate_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 232,
                                    "src": "3831:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                      "typeString": "struct PTBallot.Voter storage pointer"
                                    }
                                  },
                                  "id": 251,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "weight",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4,
                                  "src": "3831:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 252,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 171,
                                    "src": "3851:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                      "typeString": "struct PTBallot.Voter storage pointer"
                                    }
                                  },
                                  "id": 253,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "weight",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4,
                                  "src": "3851:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3831:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 255,
                              "nodeType": "ExpressionStatement",
                              "src": "3831:33:0"
                            }
                          ]
                        },
                        "id": 257,
                        "nodeType": "IfStatement",
                        "src": "3532:343:0",
                        "trueBody": {
                          "id": 248,
                          "nodeType": "Block",
                          "src": "3553:175:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 239,
                                      "name": "candidates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31,
                                      "src": "3664:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                        "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 242,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 240,
                                        "name": "delegate_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 232,
                                        "src": "3675:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                          "typeString": "struct PTBallot.Voter storage pointer"
                                        }
                                      },
                                      "id": 241,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "vote",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10,
                                      "src": "3675:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3664:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$18_storage",
                                      "typeString": "struct PTBallot.Candidate storage ref"
                                    }
                                  },
                                  "id": 243,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17,
                                  "src": "3664:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 244,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 171,
                                    "src": "3704:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                      "typeString": "struct PTBallot.Voter storage pointer"
                                    }
                                  },
                                  "id": 245,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "weight",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4,
                                  "src": "3704:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3664:53:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 247,
                              "nodeType": "ExpressionStatement",
                              "src": "3664:53:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 162,
                    "nodeType": "StructuredDocumentation",
                    "src": "2842:113:0",
                    "text": " @dev Delegate your vote to the voter 'to'.\n @param to address to which vote is delegated"
                  },
                  "functionSelector": "5c19a95c",
                  "id": 259,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 167,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 166,
                        "name": "isNotExpired",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 119,
                        "src": "2997:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2997:12:0"
                    }
                  ],
                  "name": "delegate",
                  "nameLocation": "2969:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2986:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "2978:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2978:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2977:12:0"
                  },
                  "returnParameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3010:0:0"
                  },
                  "scope": 394,
                  "src": "2960:921:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 310,
                    "nodeType": "Block",
                    "src": "4125:426:0",
                    "statements": [
                      {
                        "assignments": [
                          269
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 269,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "4149:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 310,
                            "src": "4135:20:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct PTBallot.Voter"
                            },
                            "typeName": {
                              "id": 268,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 267,
                                "name": "Voter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 11,
                                "src": "4135:5:0"
                              },
                              "referencedDeclaration": 11,
                              "src": "4135:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 274,
                        "initialValue": {
                          "baseExpression": {
                            "id": 270,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "4158:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                              "typeString": "mapping(address => struct PTBallot.Voter storage ref)"
                            }
                          },
                          "id": 273,
                          "indexExpression": {
                            "expression": {
                              "id": 271,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4165:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4165:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4158:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$11_storage",
                            "typeString": "struct PTBallot.Voter storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4135:41:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 276,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 269,
                                  "src": "4194:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                    "typeString": "struct PTBallot.Voter storage pointer"
                                  }
                                },
                                "id": 277,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "weight",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4,
                                "src": "4194:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4211:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4194:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "486173206e6f20726967687420746f20766f7465",
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4214:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
                                "typeString": "literal_string \"Has no right to vote\""
                              },
                              "value": "Has no right to vote"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
                                "typeString": "literal_string \"Has no right to vote\""
                              }
                            ],
                            "id": 275,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4186:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4186:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "4186:51:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4255:13:0",
                              "subExpression": {
                                "expression": {
                                  "id": 284,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 269,
                                  "src": "4256:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                    "typeString": "struct PTBallot.Voter storage pointer"
                                  }
                                },
                                "id": 285,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6,
                                "src": "4256:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c726561647920766f7465642e",
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4270:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
                                "typeString": "literal_string \"Already voted.\""
                              },
                              "value": "Already voted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
                                "typeString": "literal_string \"Already voted.\""
                              }
                            ],
                            "id": 283,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4247:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4247:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "4247:40:0"
                      },
                      {
                        "expression": {
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 290,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "4297:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter storage pointer"
                              }
                            },
                            "id": 292,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "4297:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4312:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4297:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 295,
                        "nodeType": "ExpressionStatement",
                        "src": "4297:19:0"
                      },
                      {
                        "expression": {
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 296,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "4326:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter storage pointer"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "vote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "4326:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 299,
                            "name": "candidate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "4340:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4326:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 301,
                        "nodeType": "ExpressionStatement",
                        "src": "4326:23:0"
                      },
                      {
                        "expression": {
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 302,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "4496:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                  "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                                }
                              },
                              "id": 304,
                              "indexExpression": {
                                "id": 303,
                                "name": "candidate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 262,
                                "src": "4507:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4496:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$18_storage",
                                "typeString": "struct PTBallot.Candidate storage ref"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "4496:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 306,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "4531:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct PTBallot.Voter storage pointer"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "4531:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4496:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 309,
                        "nodeType": "ExpressionStatement",
                        "src": "4496:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "3887:183:0",
                    "text": " @dev Give your vote (including votes delegated to you) to candidate 'candidates[candidate].name'.\n @param candidate index of candidate in the candidates array"
                  },
                  "functionSelector": "0121b93f",
                  "id": 311,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 265,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 264,
                        "name": "isNotExpired",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 119,
                        "src": "4112:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4112:12:0"
                    }
                  ],
                  "name": "vote",
                  "nameLocation": "4084:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "candidate",
                        "nameLocation": "4094:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "4089:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4089:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4088:16:0"
                  },
                  "returnParameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4125:0:0"
                  },
                  "scope": 394,
                  "src": "4075:476:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "4830:282:0",
                    "statements": [
                      {
                        "assignments": [
                          318
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 318,
                            "mutability": "mutable",
                            "name": "winningVoteCount",
                            "nameLocation": "4845:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 353,
                            "src": "4840:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 317,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4840:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 320,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4864:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4840:25:0"
                      },
                      {
                        "body": {
                          "id": 351,
                          "nodeType": "Block",
                          "src": "4920:186:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 332,
                                      "name": "candidates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31,
                                      "src": "4938:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                        "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 334,
                                    "indexExpression": {
                                      "id": 333,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 322,
                                      "src": "4949:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4938:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$18_storage",
                                      "typeString": "struct PTBallot.Candidate storage ref"
                                    }
                                  },
                                  "id": 335,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17,
                                  "src": "4938:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 336,
                                  "name": "winningVoteCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 318,
                                  "src": "4964:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4938:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 350,
                              "nodeType": "IfStatement",
                              "src": "4934:162:0",
                              "trueBody": {
                                "id": 349,
                                "nodeType": "Block",
                                "src": "4982:114:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 343,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 338,
                                        "name": "winningVoteCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 318,
                                        "src": "5000:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 339,
                                            "name": "candidates",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 31,
                                            "src": "5019:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                              "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                                            }
                                          },
                                          "id": 341,
                                          "indexExpression": {
                                            "id": 340,
                                            "name": "p",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 322,
                                            "src": "5030:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5019:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Candidate_$18_storage",
                                            "typeString": "struct PTBallot.Candidate storage ref"
                                          }
                                        },
                                        "id": 342,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "voteCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 17,
                                        "src": "5019:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5000:42:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 344,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5000:42:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 347,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 345,
                                        "name": "winningCandidate_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 315,
                                        "src": "5060:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 346,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 322,
                                        "src": "5080:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5060:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 348,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5060:21:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 325,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "4892:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 326,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "4896:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                              }
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4896:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4892:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 352,
                        "initializationExpression": {
                          "assignments": [
                            322
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 322,
                              "mutability": "mutable",
                              "name": "p",
                              "nameLocation": "4885:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 352,
                              "src": "4880:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 321,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4880:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 324,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4889:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4880:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4915:3:0",
                            "subExpression": {
                              "id": 329,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "4915:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 331,
                          "nodeType": "ExpressionStatement",
                          "src": "4915:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "4875:231:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 312,
                    "nodeType": "StructuredDocumentation",
                    "src": "4557:179:0",
                    "text": " @dev Computes the winning candidate taking all previous votes into account.\n @return winningCandidate_ index of winning candidate in the candidates array"
                  },
                  "functionSelector": "d28178d7",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "winningCandidate",
                  "nameLocation": "4750:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4766:2:0"
                  },
                  "returnParameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "winningCandidate_",
                        "nameLocation": "4807:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "4802:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4802:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4801:24:0"
                  },
                  "scope": 394,
                  "src": "4741:371:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 378,
                    "nodeType": "Block",
                    "src": "5462:127:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 362,
                            "name": "winnerName_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "5472:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 363,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5486:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                  "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                                }
                              },
                              "id": 366,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 364,
                                  "name": "winningCandidate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 354,
                                  "src": "5497:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5497:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5486:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$18_storage",
                                "typeString": "struct PTBallot.Candidate storage ref"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "5486:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5472:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "5472:49:0"
                      },
                      {
                        "expression": {
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 370,
                            "name": "winnerParty_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "5531:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 371,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5546:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$18_storage_$dyn_storage",
                                  "typeString": "struct PTBallot.Candidate storage ref[] storage ref"
                                }
                              },
                              "id": 374,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 372,
                                  "name": "winningCandidate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 354,
                                  "src": "5557:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5557:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5546:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$18_storage",
                                "typeString": "struct PTBallot.Candidate storage ref"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "party",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "5546:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5531:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 377,
                        "nodeType": "ExpressionStatement",
                        "src": "5531:51:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "5118:234:0",
                    "text": " @dev Calls winningCandidate() function to get the index of the winner contained in the candidates array and then\n @return winnerName_ the name of the winner\n @return winnerParty_ the party of the winner"
                  },
                  "functionSelector": "ed8bddeb",
                  "id": 379,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "winnerDetails",
                  "nameLocation": "5366:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5379:2:0"
                  },
                  "returnParameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "winnerName_",
                        "nameLocation": "5423:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "5415:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5415:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "winnerParty_",
                        "nameLocation": "5444:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "5436:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5436:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5414:43:0"
                  },
                  "scope": 394,
                  "src": "5357:232:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 392,
                    "nodeType": "Block",
                    "src": "5872:60:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 385,
                            "name": "endDate_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 383,
                            "src": "5882:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 386,
                              "name": "expirationDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "5893:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 387,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5910:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5910:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5893:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5882:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 391,
                        "nodeType": "ExpressionStatement",
                        "src": "5882:43:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 380,
                    "nodeType": "StructuredDocumentation",
                    "src": "5600:189:0",
                    "text": " @dev Gets the time left for a ballot by subtracting the expiration date from the current date.\n @return endDate_ the time left, in days, before the ballot expires"
                  },
                  "functionSelector": "87339020",
                  "id": 393,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ballotEndDate",
                  "nameLocation": "5804:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5817:2:0"
                  },
                  "returnParameters": {
                    "id": 384,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 383,
                        "mutability": "mutable",
                        "name": "endDate_",
                        "nameLocation": "5858:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "5853:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 382,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5853:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5852:15:0"
                  },
                  "scope": 394,
                  "src": "5795:137:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 470,
              "src": "214:5720:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                394
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 395,
                "nodeType": "StructuredDocumentation",
                "src": "5935:266:0",
                "text": " @title YourContract\n@author Bella Kaneza\n@notice You can use this control contract to create and view Ballots using the PTBallot contract\n//@dev Functions are designed to limit gas cost and deploy a Ballot with maximum visibility and minimal issue"
              },
              "fullyImplemented": true,
              "id": 469,
              "linearizedBaseContracts": [
                469
              ],
              "name": "YourContract",
              "nameLocation": "6213:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "0b318ac6",
                  "id": 398,
                  "mutability": "mutable",
                  "name": "newBallot",
                  "nameLocation": "6248:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6232:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PTBallot_$394",
                    "typeString": "contract PTBallot"
                  },
                  "typeName": {
                    "id": 397,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 396,
                      "name": "PTBallot",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 394,
                      "src": "6232:8:0"
                    },
                    "referencedDeclaration": 394,
                    "src": "6232:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PTBallot_$394",
                      "typeString": "contract PTBallot"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cdf74c3e",
                  "id": 401,
                  "mutability": "mutable",
                  "name": "deployedBallots",
                  "nameLocation": "6280:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6263:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 399,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6263:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 400,
                    "nodeType": "ArrayTypeName",
                    "src": "6263:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cf00619e",
                  "id": 405,
                  "mutability": "mutable",
                  "name": "idToBallot",
                  "nameLocation": "6336:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6301:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "typeName": {
                    "id": 404,
                    "keyType": {
                      "id": 402,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6309:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "6301:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                      "typeString": "mapping(uint256 => address)"
                    },
                    "valueType": {
                      "id": 403,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6320:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "db4dff38",
                  "id": 407,
                  "mutability": "mutable",
                  "name": "ballotId",
                  "nameLocation": "6367:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6352:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6352:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 458,
                    "nodeType": "Block",
                    "src": "6965:274:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 423,
                            "name": "newBallot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "6979:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PTBallot_$394",
                              "typeString": "contract PTBallot"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 427,
                                "name": "candidateNames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "7005:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "id": 428,
                                "name": "candidateParties",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 414,
                                "src": "7021:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "id": 429,
                                "name": "myAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 416,
                                "src": "7039:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 430,
                                "name": "amountOfDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 418,
                                "src": "7050:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "6991:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$_t_uint8_$returns$_t_contract$_PTBallot_$394_$",
                                "typeString": "function (bytes32[] memory,bytes32[] memory,address,uint8) returns (contract PTBallot)"
                              },
                              "typeName": {
                                "id": 425,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 424,
                                  "name": "PTBallot",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 394,
                                  "src": "6995:8:0"
                                },
                                "referencedDeclaration": 394,
                                "src": "6995:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PTBallot_$394",
                                  "typeString": "contract PTBallot"
                                }
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6991:72:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PTBallot_$394",
                              "typeString": "contract PTBallot"
                            }
                          },
                          "src": "6979:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PTBallot_$394",
                            "typeString": "contract PTBallot"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "6979:84:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 439,
                                  "name": "newBallot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "7106:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PTBallot_$394",
                                    "typeString": "contract PTBallot"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PTBallot_$394",
                                    "typeString": "contract PTBallot"
                                  }
                                ],
                                "id": 438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7098:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 437,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7098:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7098:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 434,
                              "name": "deployedBallots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "7077:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7077:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7077:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 442,
                        "nodeType": "ExpressionStatement",
                        "src": "7077:40:0"
                      },
                      {
                        "expression": {
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 443,
                            "name": "ballotId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "7131:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7143:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7131:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "7131:13:0"
                      },
                      {
                        "expression": {
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 447,
                              "name": "idToBallot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "7158:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 449,
                            "indexExpression": {
                              "id": 448,
                              "name": "ballotId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "7169:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7158:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 452,
                                "name": "newBallot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "7189:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PTBallot_$394",
                                  "typeString": "contract PTBallot"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PTBallot_$394",
                                  "typeString": "contract PTBallot"
                                }
                              ],
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7181:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 450,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7181:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7181:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7158:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 455,
                        "nodeType": "ExpressionStatement",
                        "src": "7158:41:0"
                      },
                      {
                        "expression": {
                          "id": 456,
                          "name": "ballotId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "7220:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 422,
                        "id": 457,
                        "nodeType": "Return",
                        "src": "7213:15:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 408,
                    "nodeType": "StructuredDocumentation",
                    "src": "6386:422:0",
                    "text": " @notice This function starts an election by deploying a new PTBallot contract\n @dev each parameter goes into the constructor of the PTBallot contract to deploy\n @param candidateNames names of candidates\n @param candidateParties names of parties\n @param myAddress address set as the owner of the ballot\n @param amountOfDays number of days ballot is open (limited from 0-255)"
                  },
                  "functionSelector": "80207a5c",
                  "id": 459,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "startElec",
                  "nameLocation": "6822:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 411,
                        "mutability": "mutable",
                        "name": "candidateNames",
                        "nameLocation": "6850:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "6833:31:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 409,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6833:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 410,
                          "nodeType": "ArrayTypeName",
                          "src": "6833:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "candidateParties",
                        "nameLocation": "6883:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "6866:33:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 412,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6866:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 413,
                          "nodeType": "ArrayTypeName",
                          "src": "6866:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "myAddress",
                        "nameLocation": "6909:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "6901:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6901:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 418,
                        "mutability": "mutable",
                        "name": "amountOfDays",
                        "nameLocation": "6926:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "6920:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 417,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6920:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6832:107:0"
                  },
                  "returnParameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 459,
                        "src": "6955:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6955:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6954:9:0"
                  },
                  "scope": 469,
                  "src": "6813:426:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "7463:25:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 465,
                          "name": "deployedBallots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "7471:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 464,
                        "id": 466,
                        "nodeType": "Return",
                        "src": "7464:22:0"
                      }
                    ]
                  },
                  "functionSelector": "0e3e4a75",
                  "id": 468,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getsDeployedBallots",
                  "nameLocation": "7398:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7417:2:0"
                  },
                  "returnParameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "7441:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7441:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 462,
                          "nodeType": "ArrayTypeName",
                          "src": "7441:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7439:19:0"
                  },
                  "scope": 469,
                  "src": "7389:99:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 470,
              "src": "6204:1286:0",
              "usedErrors": []
            }
          ],
          "src": "33:7458:0"
        },
        "id": 0
      }
    }
  }
}
